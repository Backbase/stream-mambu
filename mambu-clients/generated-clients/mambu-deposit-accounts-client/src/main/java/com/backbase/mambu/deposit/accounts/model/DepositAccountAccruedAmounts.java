/*
 * deposits
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.accounts.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Groups all fields related to a deposit account&#39;s accrued amounts
 */
@ApiModel(description = "Groups all fields related to a deposit account's accrued amounts")
@JsonPropertyOrder({
  DepositAccountAccruedAmounts.JSON_PROPERTY_OVERDRAFT_INTEREST_ACCRUED,
  DepositAccountAccruedAmounts.JSON_PROPERTY_INTEREST_ACCRUED,
  DepositAccountAccruedAmounts.JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_ACCRUED
})

public class DepositAccountAccruedAmounts {
  public static final String JSON_PROPERTY_OVERDRAFT_INTEREST_ACCRUED = "overdraftInterestAccrued";
  private BigDecimal overdraftInterestAccrued;

  public static final String JSON_PROPERTY_INTEREST_ACCRUED = "interestAccrued";
  private BigDecimal interestAccrued;

  public static final String JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_ACCRUED = "technicalOverdraftInterestAccrued";
  private BigDecimal technicalOverdraftInterestAccrued;


   /**
   * The amount of overdraft interest that has been accrued in the account
   * @return overdraftInterestAccrued
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of overdraft interest that has been accrued in the account")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_INTEREST_ACCRUED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftInterestAccrued() {
    return overdraftInterestAccrued;
  }




   /**
   * The amount of interest that has been accrued in the account
   * @return interestAccrued
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of interest that has been accrued in the account")
  @JsonProperty(JSON_PROPERTY_INTEREST_ACCRUED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestAccrued() {
    return interestAccrued;
  }




   /**
   * The amount of technical overdraft interest that has been accrued in the account
   * @return technicalOverdraftInterestAccrued
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of technical overdraft interest that has been accrued in the account")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_ACCRUED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTechnicalOverdraftInterestAccrued() {
    return technicalOverdraftInterestAccrued;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositAccountAccruedAmounts depositAccountAccruedAmounts = (DepositAccountAccruedAmounts) o;
    return Objects.equals(this.overdraftInterestAccrued, depositAccountAccruedAmounts.overdraftInterestAccrued) &&
        Objects.equals(this.interestAccrued, depositAccountAccruedAmounts.interestAccrued) &&
        Objects.equals(this.technicalOverdraftInterestAccrued, depositAccountAccruedAmounts.technicalOverdraftInterestAccrued);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overdraftInterestAccrued, interestAccrued, technicalOverdraftInterestAccrued);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositAccountAccruedAmounts {\n");
    sb.append("    overdraftInterestAccrued: ").append(toIndentedString(overdraftInterestAccrued)).append("\n");
    sb.append("    interestAccrued: ").append(toIndentedString(interestAccrued)).append("\n");
    sb.append("    technicalOverdraftInterestAccrued: ").append(toIndentedString(technicalOverdraftInterestAccrued)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

