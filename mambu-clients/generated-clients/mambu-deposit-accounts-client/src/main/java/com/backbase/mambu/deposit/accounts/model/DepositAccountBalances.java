/*
 * deposits
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.accounts.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Groups all fields related to a deposit account&#39;s balances
 */
@ApiModel(description = "Groups all fields related to a deposit account's balances")
@JsonPropertyOrder({
  DepositAccountBalances.JSON_PROPERTY_OVERDRAFT_INTEREST_DUE,
  DepositAccountBalances.JSON_PROPERTY_TOTAL_BALANCE,
  DepositAccountBalances.JSON_PROPERTY_LOCKED_BALANCE,
  DepositAccountBalances.JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT,
  DepositAccountBalances.JSON_PROPERTY_OVERDRAFT_AMOUNT,
  DepositAccountBalances.JSON_PROPERTY_HOLD_BALANCE,
  DepositAccountBalances.JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_DUE,
  DepositAccountBalances.JSON_PROPERTY_FEES_DUE,
  DepositAccountBalances.JSON_PROPERTY_AVAILABLE_BALANCE
})

public class DepositAccountBalances {
  public static final String JSON_PROPERTY_OVERDRAFT_INTEREST_DUE = "overdraftInterestDue";
  private BigDecimal overdraftInterestDue;

  public static final String JSON_PROPERTY_TOTAL_BALANCE = "totalBalance";
  private BigDecimal totalBalance;

  public static final String JSON_PROPERTY_LOCKED_BALANCE = "lockedBalance";
  private BigDecimal lockedBalance;

  public static final String JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT = "technicalOverdraftAmount";
  private BigDecimal technicalOverdraftAmount;

  public static final String JSON_PROPERTY_OVERDRAFT_AMOUNT = "overdraftAmount";
  private BigDecimal overdraftAmount;

  public static final String JSON_PROPERTY_HOLD_BALANCE = "holdBalance";
  private BigDecimal holdBalance;

  public static final String JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_DUE = "technicalOverdraftInterestDue";
  private BigDecimal technicalOverdraftInterestDue;

  public static final String JSON_PROPERTY_FEES_DUE = "feesDue";
  private BigDecimal feesDue;

  public static final String JSON_PROPERTY_AVAILABLE_BALANCE = "availableBalance";
  private BigDecimal availableBalance;


   /**
   * How much interest is due to be paid on this account as a result of the authorized overdraft
   * @return overdraftInterestDue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much interest is due to be paid on this account as a result of the authorized overdraft")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_INTEREST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftInterestDue() {
    return overdraftInterestDue;
  }




   /**
   * The current balance of the account
   * @return totalBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current balance of the account")
  @JsonProperty(JSON_PROPERTY_TOTAL_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTotalBalance() {
    return totalBalance;
  }




   /**
   * No operation can modify the balance of the account and get it lower than this locked balance
   * @return lockedBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "No operation can modify the balance of the account and get it lower than this locked balance")
  @JsonProperty(JSON_PROPERTY_LOCKED_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLockedBalance() {
    return lockedBalance;
  }




   /**
   * How much money has been taken out as unplanned overdraft
   * @return technicalOverdraftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much money has been taken out as unplanned overdraft")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTechnicalOverdraftAmount() {
    return technicalOverdraftAmount;
  }




   /**
   * How much money has been taken out in overdraft
   * @return overdraftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much money has been taken out in overdraft")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftAmount() {
    return overdraftAmount;
  }




   /**
   * The sum of all the authorization hold amounts on this account
   * @return holdBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sum of all the authorization hold amounts on this account")
  @JsonProperty(JSON_PROPERTY_HOLD_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getHoldBalance() {
    return holdBalance;
  }




   /**
   * How much interest is due to be paid on this account as a result of the technical overdraft
   * @return technicalOverdraftInterestDue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much interest is due to be paid on this account as a result of the technical overdraft")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTechnicalOverdraftInterestDue() {
    return technicalOverdraftInterestDue;
  }




   /**
   * How much fees is due to be paid on this account
   * @return feesDue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much fees is due to be paid on this account")
  @JsonProperty(JSON_PROPERTY_FEES_DUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFeesDue() {
    return feesDue;
  }




   /**
   * The current available balance for deposit transactions
   * @return availableBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The current available balance for deposit transactions")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAvailableBalance() {
    return availableBalance;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositAccountBalances depositAccountBalances = (DepositAccountBalances) o;
    return Objects.equals(this.overdraftInterestDue, depositAccountBalances.overdraftInterestDue) &&
        Objects.equals(this.totalBalance, depositAccountBalances.totalBalance) &&
        Objects.equals(this.lockedBalance, depositAccountBalances.lockedBalance) &&
        Objects.equals(this.technicalOverdraftAmount, depositAccountBalances.technicalOverdraftAmount) &&
        Objects.equals(this.overdraftAmount, depositAccountBalances.overdraftAmount) &&
        Objects.equals(this.holdBalance, depositAccountBalances.holdBalance) &&
        Objects.equals(this.technicalOverdraftInterestDue, depositAccountBalances.technicalOverdraftInterestDue) &&
        Objects.equals(this.feesDue, depositAccountBalances.feesDue) &&
        Objects.equals(this.availableBalance, depositAccountBalances.availableBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overdraftInterestDue, totalBalance, lockedBalance, technicalOverdraftAmount, overdraftAmount, holdBalance, technicalOverdraftInterestDue, feesDue, availableBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositAccountBalances {\n");
    sb.append("    overdraftInterestDue: ").append(toIndentedString(overdraftInterestDue)).append("\n");
    sb.append("    totalBalance: ").append(toIndentedString(totalBalance)).append("\n");
    sb.append("    lockedBalance: ").append(toIndentedString(lockedBalance)).append("\n");
    sb.append("    technicalOverdraftAmount: ").append(toIndentedString(technicalOverdraftAmount)).append("\n");
    sb.append("    overdraftAmount: ").append(toIndentedString(overdraftAmount)).append("\n");
    sb.append("    holdBalance: ").append(toIndentedString(holdBalance)).append("\n");
    sb.append("    technicalOverdraftInterestDue: ").append(toIndentedString(technicalOverdraftInterestDue)).append("\n");
    sb.append("    feesDue: ").append(toIndentedString(feesDue)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

