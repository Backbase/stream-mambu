/*
 * depositproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.deposit.products.model.BranchSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Holds information about product availability.
 */
@ApiModel(description = "Holds information about product availability.")
@JsonPropertyOrder({
  DepositProductAvailabilitySettings.JSON_PROPERTY_BRANCH_SETTINGS,
  DepositProductAvailabilitySettings.JSON_PROPERTY_AVAILABLE_FOR
})

public class DepositProductAvailabilitySettings {
  public static final String JSON_PROPERTY_BRANCH_SETTINGS = "branchSettings";
  private BranchSettings branchSettings;

  /**
   * Gets or Sets availableFor
   */
  public enum AvailableForEnum {
    INDIVIDUALS("INDIVIDUALS"),
    
    PURE_GROUPS("PURE_GROUPS");

    private String value;

    AvailableForEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AvailableForEnum fromValue(String value) {
      for (AvailableForEnum b : AvailableForEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AVAILABLE_FOR = "availableFor";
  private List<AvailableForEnum> availableFor = null;


  public DepositProductAvailabilitySettings branchSettings(BranchSettings branchSettings) {
    
    this.branchSettings = branchSettings;
    return this;
  }

   /**
   * Get branchSettings
   * @return branchSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BRANCH_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BranchSettings getBranchSettings() {
    return branchSettings;
  }


  public void setBranchSettings(BranchSettings branchSettings) {
    this.branchSettings = branchSettings;
  }


  public DepositProductAvailabilitySettings availableFor(List<AvailableForEnum> availableFor) {
    
    this.availableFor = availableFor;
    return this;
  }

  public DepositProductAvailabilitySettings addAvailableForItem(AvailableForEnum availableForItem) {
    if (this.availableFor == null) {
      this.availableFor = new ArrayList<>();
    }
    this.availableFor.add(availableForItem);
    return this;
  }

   /**
   * Holds the entities this product is available for. i.e Individuals
   * @return availableFor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Holds the entities this product is available for. i.e Individuals")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_FOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AvailableForEnum> getAvailableFor() {
    return availableFor;
  }


  public void setAvailableFor(List<AvailableForEnum> availableFor) {
    this.availableFor = availableFor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositProductAvailabilitySettings depositProductAvailabilitySettings = (DepositProductAvailabilitySettings) o;
    return Objects.equals(this.branchSettings, depositProductAvailabilitySettings.branchSettings) &&
        Objects.equals(this.availableFor, depositProductAvailabilitySettings.availableFor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchSettings, availableFor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositProductAvailabilitySettings {\n");
    sb.append("    branchSettings: ").append(toIndentedString(branchSettings)).append("\n");
    sb.append("    availableFor: ").append(toIndentedString(availableFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

