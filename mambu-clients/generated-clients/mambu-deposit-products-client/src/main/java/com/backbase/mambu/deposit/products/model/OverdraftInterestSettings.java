/*
 * depositproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.deposit.products.model.DepositProductOverdraftInterestRateSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Overdraft settings for the product
 */
@ApiModel(description = "Overdraft settings for the product")
@JsonPropertyOrder({
  OverdraftInterestSettings.JSON_PROPERTY_INTEREST_RATE_SETTINGS,
  OverdraftInterestSettings.JSON_PROPERTY_DAYS_IN_YEAR,
  OverdraftInterestSettings.JSON_PROPERTY_INTEREST_CALCULATION_BALANCE
})

public class OverdraftInterestSettings {
  public static final String JSON_PROPERTY_INTEREST_RATE_SETTINGS = "interestRateSettings";
  private DepositProductOverdraftInterestRateSettings interestRateSettings;

  /**
   * How many days in a year should be used for interest calculations
   */
  public enum DaysInYearEnum {
    ACTUAL_365_FIXED("ACTUAL_365_FIXED"),
    
    ACTUAL_360("ACTUAL_360"),
    
    ACTUAL_ACTUAL_ISDA("ACTUAL_ACTUAL_ISDA"),
    
    E30_360("E30_360"),
    
    E30_42_365("E30_42_365");

    private String value;

    DaysInYearEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DaysInYearEnum fromValue(String value) {
      for (DaysInYearEnum b : DaysInYearEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DAYS_IN_YEAR = "daysInYear";
  private DaysInYearEnum daysInYear;

  /**
   * The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.
   */
  public enum InterestCalculationBalanceEnum {
    MINIMUM("MINIMUM"),
    
    AVERAGE("AVERAGE"),
    
    END_OF_DAY("END_OF_DAY"),
    
    MINIMUM_TO_END_OF_DAY("MINIMUM_TO_END_OF_DAY");

    private String value;

    InterestCalculationBalanceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestCalculationBalanceEnum fromValue(String value) {
      for (InterestCalculationBalanceEnum b : InterestCalculationBalanceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_CALCULATION_BALANCE = "interestCalculationBalance";
  private InterestCalculationBalanceEnum interestCalculationBalance;


  public OverdraftInterestSettings interestRateSettings(DepositProductOverdraftInterestRateSettings interestRateSettings) {
    
    this.interestRateSettings = interestRateSettings;
    return this;
  }

   /**
   * Get interestRateSettings
   * @return interestRateSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTEREST_RATE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DepositProductOverdraftInterestRateSettings getInterestRateSettings() {
    return interestRateSettings;
  }


  public void setInterestRateSettings(DepositProductOverdraftInterestRateSettings interestRateSettings) {
    this.interestRateSettings = interestRateSettings;
  }


  public OverdraftInterestSettings daysInYear(DaysInYearEnum daysInYear) {
    
    this.daysInYear = daysInYear;
    return this;
  }

   /**
   * How many days in a year should be used for interest calculations
   * @return daysInYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How many days in a year should be used for interest calculations")
  @JsonProperty(JSON_PROPERTY_DAYS_IN_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DaysInYearEnum getDaysInYear() {
    return daysInYear;
  }


  public void setDaysInYear(DaysInYearEnum daysInYear) {
    this.daysInYear = daysInYear;
  }


  public OverdraftInterestSettings interestCalculationBalance(InterestCalculationBalanceEnum interestCalculationBalance) {
    
    this.interestCalculationBalance = interestCalculationBalance;
    return this;
  }

   /**
   * The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.
   * @return interestCalculationBalance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The balance which is used for the overdraft interest calculation. Default value is MINIMUM. If set to null on a PUT call and the product allows overdrafts, the null value is ignored and not changed.")
  @JsonProperty(JSON_PROPERTY_INTEREST_CALCULATION_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestCalculationBalanceEnum getInterestCalculationBalance() {
    return interestCalculationBalance;
  }


  public void setInterestCalculationBalance(InterestCalculationBalanceEnum interestCalculationBalance) {
    this.interestCalculationBalance = interestCalculationBalance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OverdraftInterestSettings overdraftInterestSettings = (OverdraftInterestSettings) o;
    return Objects.equals(this.interestRateSettings, overdraftInterestSettings.interestRateSettings) &&
        Objects.equals(this.daysInYear, overdraftInterestSettings.daysInYear) &&
        Objects.equals(this.interestCalculationBalance, overdraftInterestSettings.interestCalculationBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(interestRateSettings, daysInYear, interestCalculationBalance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OverdraftInterestSettings {\n");
    sb.append("    interestRateSettings: ").append(toIndentedString(interestRateSettings)).append("\n");
    sb.append("    daysInYear: ").append(toIndentedString(daysInYear)).append("\n");
    sb.append("    interestCalculationBalance: ").append(toIndentedString(interestCalculationBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

