/*
 * clients
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.clients.model.Address;
import com.backbase.mambu.clients.model.IdentificationDocument;
import com.backbase.mambu.clients.model.PortalSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * A person that uses the services of the bank. Clients may have associated information such as their address, custom fields or identification documents
 */
@ApiModel(description = "A person that uses the services of the bank. Clients may have associated information such as their address, custom fields or identification documents")
@JsonPropertyOrder({
  Client.JSON_PROPERTY_LAST_NAME,
  Client.JSON_PROPERTY_MIGRATION_EVENT_KEY,
  Client.JSON_PROPERTY_PREFERRED_LANGUAGE,
  Client.JSON_PROPERTY_ADDRESSES,
  Client.JSON_PROPERTY_NOTES,
  Client.JSON_PROPERTY_GENDER,
  Client.JSON_PROPERTY_GROUP_KEYS,
  Client.JSON_PROPERTY_GROUP_LOAN_CYCLE,
  Client.JSON_PROPERTY_PORTAL_SETTINGS,
  Client.JSON_PROPERTY_ASSIGNED_BRANCH_KEY,
  Client.JSON_PROPERTY_LOAN_CYCLE,
  Client.JSON_PROPERTY_EMAIL_ADDRESS,
  Client.JSON_PROPERTY_ENCODED_KEY,
  Client.JSON_PROPERTY_ID,
  Client.JSON_PROPERTY_STATE,
  Client.JSON_PROPERTY_ASSIGNED_USER_KEY,
  Client.JSON_PROPERTY_CLIENT_ROLE_KEY,
  Client.JSON_PROPERTY_LAST_MODIFIED_DATE,
  Client.JSON_PROPERTY_HOME_PHONE,
  Client.JSON_PROPERTY_CREATION_DATE,
  Client.JSON_PROPERTY_BIRTH_DATE,
  Client.JSON_PROPERTY_ASSIGNED_CENTRE_KEY,
  Client.JSON_PROPERTY_APPROVED_DATE,
  Client.JSON_PROPERTY_FIRST_NAME,
  Client.JSON_PROPERTY_ID_DOCUMENTS,
  Client.JSON_PROPERTY_PROFILE_PICTURE_KEY,
  Client.JSON_PROPERTY_PROFILE_SIGNATURE_KEY,
  Client.JSON_PROPERTY_MOBILE_PHONE,
  Client.JSON_PROPERTY_CLOSED_DATE,
  Client.JSON_PROPERTY_MIDDLE_NAME,
  Client.JSON_PROPERTY_ACTIVATION_DATE
})

public class Client {
  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_MIGRATION_EVENT_KEY = "migrationEventKey";
  private String migrationEventKey;

  /**
   * The client&#39;s language of use in Mambu
   */
  public enum PreferredLanguageEnum {
    ENGLISH("ENGLISH"),
    
    PORTUGESE("PORTUGESE"),
    
    SPANISH("SPANISH"),
    
    RUSSIAN("RUSSIAN"),
    
    FRENCH("FRENCH"),
    
    GEORGIAN("GEORGIAN"),
    
    CHINESE("CHINESE"),
    
    INDONESIAN("INDONESIAN"),
    
    ROMANIAN("ROMANIAN"),
    
    BURMESE("BURMESE"),
    
    GERMAN("GERMAN"),
    
    PHRASE("PHRASE");

    private String value;

    PreferredLanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PreferredLanguageEnum fromValue(String value) {
      for (PreferredLanguageEnum b : PreferredLanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PREFERRED_LANGUAGE = "preferredLanguage";
  private PreferredLanguageEnum preferredLanguage;

  public static final String JSON_PROPERTY_ADDRESSES = "addresses";
  private List<Address> addresses = null;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  /**
   * Gender of the person, male or female
   */
  public enum GenderEnum {
    MALE("MALE"),
    
    FEMALE("FEMALE");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_GROUP_KEYS = "groupKeys";
  private List<String> groupKeys = null;

  public static final String JSON_PROPERTY_GROUP_LOAN_CYCLE = "groupLoanCycle";
  private Integer groupLoanCycle;

  public static final String JSON_PROPERTY_PORTAL_SETTINGS = "portalSettings";
  private PortalSettings portalSettings;

  public static final String JSON_PROPERTY_ASSIGNED_BRANCH_KEY = "assignedBranchKey";
  private String assignedBranchKey;

  public static final String JSON_PROPERTY_LOAN_CYCLE = "loanCycle";
  private Integer loanCycle;

  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "emailAddress";
  private String emailAddress;

  public static final String JSON_PROPERTY_ENCODED_KEY = "encodedKey";
  private String encodedKey;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * The state of a client shows his workflow status, if he is waiting approval or is rejected or blacklisted
   */
  public enum StateEnum {
    PENDING_APPROVAL("PENDING_APPROVAL"),
    
    INACTIVE("INACTIVE"),
    
    ACTIVE("ACTIVE"),
    
    EXITED("EXITED"),
    
    BLACKLISTED("BLACKLISTED"),
    
    REJECTED("REJECTED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_ASSIGNED_USER_KEY = "assignedUserKey";
  private String assignedUserKey;

  public static final String JSON_PROPERTY_CLIENT_ROLE_KEY = "clientRoleKey";
  private String clientRoleKey;

  public static final String JSON_PROPERTY_LAST_MODIFIED_DATE = "lastModifiedDate";
  private OffsetDateTime lastModifiedDate;

  public static final String JSON_PROPERTY_HOME_PHONE = "homePhone";
  private String homePhone;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_BIRTH_DATE = "birthDate";
  private LocalDate birthDate;

  public static final String JSON_PROPERTY_ASSIGNED_CENTRE_KEY = "assignedCentreKey";
  private String assignedCentreKey;

  public static final String JSON_PROPERTY_APPROVED_DATE = "approvedDate";
  private OffsetDateTime approvedDate;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_ID_DOCUMENTS = "idDocuments";
  private List<IdentificationDocument> idDocuments = null;

  public static final String JSON_PROPERTY_PROFILE_PICTURE_KEY = "profilePictureKey";
  private String profilePictureKey;

  public static final String JSON_PROPERTY_PROFILE_SIGNATURE_KEY = "profileSignatureKey";
  private String profileSignatureKey;

  public static final String JSON_PROPERTY_MOBILE_PHONE = "mobilePhone";
  private String mobilePhone;

  public static final String JSON_PROPERTY_CLOSED_DATE = "closedDate";
  private OffsetDateTime closedDate;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private String middleName;

  public static final String JSON_PROPERTY_ACTIVATION_DATE = "activationDate";
  private OffsetDateTime activationDate;


  public Client lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name, surname or family name of the client
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "The last name, surname or family name of the client")
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


   /**
   * The migration event encoded key associated with this client.
   * @return migrationEventKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The migration event encoded key associated with this client.")
  @JsonProperty(JSON_PROPERTY_MIGRATION_EVENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMigrationEventKey() {
    return migrationEventKey;
  }




  public Client preferredLanguage(PreferredLanguageEnum preferredLanguage) {
    
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * The client&#39;s language of use in Mambu
   * @return preferredLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The client's language of use in Mambu")
  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PreferredLanguageEnum getPreferredLanguage() {
    return preferredLanguage;
  }


  public void setPreferredLanguage(PreferredLanguageEnum preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public Client addresses(List<Address> addresses) {
    
    this.addresses = addresses;
    return this;
  }

  public Client addAddressesItem(Address addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * The addresses associated with this client information like street, city etc.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The addresses associated with this client information like street, city etc.")
  @JsonProperty(JSON_PROPERTY_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Address> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<Address> addresses) {
    this.addresses = addresses;
  }


  public Client notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Extra notes about this client
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extra notes about this client")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    this.notes = notes;
  }


  public Client gender(GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

   /**
   * Gender of the person, male or female
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gender of the person, male or female")
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }


  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }


  public Client groupKeys(List<String> groupKeys) {
    
    this.groupKeys = groupKeys;
    return this;
  }

  public Client addGroupKeysItem(String groupKeysItem) {
    if (this.groupKeys == null) {
      this.groupKeys = new ArrayList<>();
    }
    this.groupKeys.add(groupKeysItem);
    return this;
  }

   /**
   * The groups to which this client belongs
   * @return groupKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The groups to which this client belongs")
  @JsonProperty(JSON_PROPERTY_GROUP_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGroupKeys() {
    return groupKeys;
  }


  public void setGroupKeys(List<String> groupKeys) {
    this.groupKeys = groupKeys;
  }


   /**
   * Number of paid and closed (with &#39;obligations met&#39;) accounts for this client&#39;s group, when the closing operation is reverted, this is reduced
   * @return groupLoanCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of paid and closed (with 'obligations met') accounts for this client's group, when the closing operation is reverted, this is reduced")
  @JsonProperty(JSON_PROPERTY_GROUP_LOAN_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGroupLoanCycle() {
    return groupLoanCycle;
  }




  public Client portalSettings(PortalSettings portalSettings) {
    
    this.portalSettings = portalSettings;
    return this;
  }

   /**
   * Get portalSettings
   * @return portalSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PORTAL_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortalSettings getPortalSettings() {
    return portalSettings;
  }


  public void setPortalSettings(PortalSettings portalSettings) {
    this.portalSettings = portalSettings;
  }


  public Client assignedBranchKey(String assignedBranchKey) {
    
    this.assignedBranchKey = assignedBranchKey;
    return this;
  }

   /**
   * Encoded key of the branch this client is assigned to
   * @return assignedBranchKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encoded key of the branch this client is assigned to")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_BRANCH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedBranchKey() {
    return assignedBranchKey;
  }


  public void setAssignedBranchKey(String assignedBranchKey) {
    this.assignedBranchKey = assignedBranchKey;
  }


   /**
   * Number of paid and closed (with &#39;obligations met&#39;) accounts for this client, when the closing operation is reverted, this is reduced
   * @return loanCycle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of paid and closed (with 'obligations met') accounts for this client, when the closing operation is reverted, this is reduced")
  @JsonProperty(JSON_PROPERTY_LOAN_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLoanCycle() {
    return loanCycle;
  }




  public Client emailAddress(String emailAddress) {
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * The client&#39;s email address
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The client's email address")
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


   /**
   * The encoded key of the client, auto generated, unique
   * @return encodedKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encoded key of the client, auto generated, unique")
  @JsonProperty(JSON_PROPERTY_ENCODED_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncodedKey() {
    return encodedKey;
  }




  public Client id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the client, can be generated and customized, unique
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the client, can be generated and customized, unique")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Client state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state of a client shows his workflow status, if he is waiting approval or is rejected or blacklisted
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of a client shows his workflow status, if he is waiting approval or is rejected or blacklisted")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public Client assignedUserKey(String assignedUserKey) {
    
    this.assignedUserKey = assignedUserKey;
    return this;
  }

   /**
   * Encoded key of the user this client is assigned to
   * @return assignedUserKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encoded key of the user this client is assigned to")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_USER_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedUserKey() {
    return assignedUserKey;
  }


  public void setAssignedUserKey(String assignedUserKey) {
    this.assignedUserKey = assignedUserKey;
  }


  public Client clientRoleKey(String clientRoleKey) {
    
    this.clientRoleKey = clientRoleKey;
    return this;
  }

   /**
   * A role which describes the intended use of a client in the system
   * @return clientRoleKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A role which describes the intended use of a client in the system")
  @JsonProperty(JSON_PROPERTY_CLIENT_ROLE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientRoleKey() {
    return clientRoleKey;
  }


  public void setClientRoleKey(String clientRoleKey) {
    this.clientRoleKey = clientRoleKey;
  }


   /**
   * The last date this client was modified
   * @return lastModifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The last date this client was modified")
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }




  public Client homePhone(String homePhone) {
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * The client&#39;s home phone number
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The client's home phone number")
  @JsonProperty(JSON_PROPERTY_HOME_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    this.homePhone = homePhone;
  }


   /**
   * The date this client was created
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date this client was created")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }




  public Client birthDate(LocalDate birthDate) {
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * The date when this client was born
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sun Apr 26 02:00:00 CEST 1987", value = "The date when this client was born")
  @JsonProperty(JSON_PROPERTY_BIRTH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(LocalDate birthDate) {
    this.birthDate = birthDate;
  }


  public Client assignedCentreKey(String assignedCentreKey) {
    
    this.assignedCentreKey = assignedCentreKey;
    return this;
  }

   /**
   * Encoded key of the centre this client is assigned to
   * @return assignedCentreKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encoded key of the centre this client is assigned to")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_CENTRE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedCentreKey() {
    return assignedCentreKey;
  }


  public void setAssignedCentreKey(String assignedCentreKey) {
    this.assignedCentreKey = assignedCentreKey;
  }


   /**
   * date when client was approved
   * @return approvedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "date when client was approved")
  @JsonProperty(JSON_PROPERTY_APPROVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getApprovedDate() {
    return approvedDate;
  }




  public Client firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name, personal name, given name or forename of the client
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "The first name, personal name, given name or forename of the client")
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Client idDocuments(List<IdentificationDocument> idDocuments) {
    
    this.idDocuments = idDocuments;
    return this;
  }

  public Client addIdDocumentsItem(IdentificationDocument idDocumentsItem) {
    if (this.idDocuments == null) {
      this.idDocuments = new ArrayList<>();
    }
    this.idDocuments.add(idDocumentsItem);
    return this;
  }

   /**
   * The identification documents of this person
   * @return idDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identification documents of this person")
  @JsonProperty(JSON_PROPERTY_ID_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentificationDocument> getIdDocuments() {
    return idDocuments;
  }


  public void setIdDocuments(List<IdentificationDocument> idDocuments) {
    this.idDocuments = idDocuments;
  }


   /**
   * Encoded key of this clients profile picture
   * @return profilePictureKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encoded key of this clients profile picture")
  @JsonProperty(JSON_PROPERTY_PROFILE_PICTURE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfilePictureKey() {
    return profilePictureKey;
  }




   /**
   * Encoded key of the users profile signature
   * @return profileSignatureKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encoded key of the users profile signature")
  @JsonProperty(JSON_PROPERTY_PROFILE_SIGNATURE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfileSignatureKey() {
    return profileSignatureKey;
  }




  public Client mobilePhone(String mobilePhone) {
    
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * The client&#39;s mobile phone number
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The client's mobile phone number")
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobilePhone() {
    return mobilePhone;
  }


  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


   /**
   * date when client was closed
   * @return closedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "date when client was closed")
  @JsonProperty(JSON_PROPERTY_CLOSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getClosedDate() {
    return closedDate;
  }




  public Client middleName(String middleName) {
    
    this.middleName = middleName;
    return this;
  }

   /**
   * The middle name of the client, if she/he has one
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The middle name of the client, if she/he has one")
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


   /**
   * The date when client was set as active for the first time
   * @return activationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date when client was set as active for the first time")
  @JsonProperty(JSON_PROPERTY_ACTIVATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getActivationDate() {
    return activationDate;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Client client = (Client) o;
    return Objects.equals(this.lastName, client.lastName) &&
        Objects.equals(this.migrationEventKey, client.migrationEventKey) &&
        Objects.equals(this.preferredLanguage, client.preferredLanguage) &&
        Objects.equals(this.addresses, client.addresses) &&
        Objects.equals(this.notes, client.notes) &&
        Objects.equals(this.gender, client.gender) &&
        Objects.equals(this.groupKeys, client.groupKeys) &&
        Objects.equals(this.groupLoanCycle, client.groupLoanCycle) &&
        Objects.equals(this.portalSettings, client.portalSettings) &&
        Objects.equals(this.assignedBranchKey, client.assignedBranchKey) &&
        Objects.equals(this.loanCycle, client.loanCycle) &&
        Objects.equals(this.emailAddress, client.emailAddress) &&
        Objects.equals(this.encodedKey, client.encodedKey) &&
        Objects.equals(this.id, client.id) &&
        Objects.equals(this.state, client.state) &&
        Objects.equals(this.assignedUserKey, client.assignedUserKey) &&
        Objects.equals(this.clientRoleKey, client.clientRoleKey) &&
        Objects.equals(this.lastModifiedDate, client.lastModifiedDate) &&
        Objects.equals(this.homePhone, client.homePhone) &&
        Objects.equals(this.creationDate, client.creationDate) &&
        Objects.equals(this.birthDate, client.birthDate) &&
        Objects.equals(this.assignedCentreKey, client.assignedCentreKey) &&
        Objects.equals(this.approvedDate, client.approvedDate) &&
        Objects.equals(this.firstName, client.firstName) &&
        Objects.equals(this.idDocuments, client.idDocuments) &&
        Objects.equals(this.profilePictureKey, client.profilePictureKey) &&
        Objects.equals(this.profileSignatureKey, client.profileSignatureKey) &&
        Objects.equals(this.mobilePhone, client.mobilePhone) &&
        Objects.equals(this.closedDate, client.closedDate) &&
        Objects.equals(this.middleName, client.middleName) &&
        Objects.equals(this.activationDate, client.activationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastName, migrationEventKey, preferredLanguage, addresses, notes, gender, groupKeys, groupLoanCycle, portalSettings, assignedBranchKey, loanCycle, emailAddress, encodedKey, id, state, assignedUserKey, clientRoleKey, lastModifiedDate, homePhone, creationDate, birthDate, assignedCentreKey, approvedDate, firstName, idDocuments, profilePictureKey, profileSignatureKey, mobilePhone, closedDate, middleName, activationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Client {\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    migrationEventKey: ").append(toIndentedString(migrationEventKey)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    groupKeys: ").append(toIndentedString(groupKeys)).append("\n");
    sb.append("    groupLoanCycle: ").append(toIndentedString(groupLoanCycle)).append("\n");
    sb.append("    portalSettings: ").append(toIndentedString(portalSettings)).append("\n");
    sb.append("    assignedBranchKey: ").append(toIndentedString(assignedBranchKey)).append("\n");
    sb.append("    loanCycle: ").append(toIndentedString(loanCycle)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    encodedKey: ").append(toIndentedString(encodedKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    assignedUserKey: ").append(toIndentedString(assignedUserKey)).append("\n");
    sb.append("    clientRoleKey: ").append(toIndentedString(clientRoleKey)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    assignedCentreKey: ").append(toIndentedString(assignedCentreKey)).append("\n");
    sb.append("    approvedDate: ").append(toIndentedString(approvedDate)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    idDocuments: ").append(toIndentedString(idDocuments)).append("\n");
    sb.append("    profilePictureKey: ").append(toIndentedString(profilePictureKey)).append("\n");
    sb.append("    profileSignatureKey: ").append(toIndentedString(profileSignatureKey)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    activationDate: ").append(toIndentedString(activationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

