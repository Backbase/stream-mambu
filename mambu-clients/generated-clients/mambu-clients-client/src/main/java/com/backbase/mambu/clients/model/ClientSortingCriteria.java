/*
 * clients
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.clients.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The sorting criteria used for Clients
 */
@ApiModel(description = "The sorting criteria used for Clients")
@JsonPropertyOrder({
  ClientSortingCriteria.JSON_PROPERTY_FIELD,
  ClientSortingCriteria.JSON_PROPERTY_ORDER
})

public class ClientSortingCriteria {
  /**
   * Contains the field that can be used as sorting selection. Can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId].
   */
  public enum FieldEnum {
    ENCODEDKEY("encodedKey"),
    
    ID("id"),
    
    FULLNAME("fullName"),
    
    FIRSTNAME("firstName"),
    
    MIDDLENAME("middleName"),
    
    LASTNAME("lastName"),
    
    CREATIONDATE("creationDate"),
    
    LASTMODIFIEDDATE("lastModifiedDate"),
    
    DEPOSITSBALANCE("depositsBalance"),
    
    LOANSBALANCE("loansBalance"),
    
    PENDINGLOANAMOUNT("pendingLoanAmount"),
    
    APPROVEDLOANAMOUNT("approvedLoanAmount"),
    
    TOTALBALANCE("totalBalance"),
    
    TOTALDUE("totalDue"),
    
    HOMEPHONENUMBER("homePhoneNumber"),
    
    MOBILEPHONENUMBER("mobilePhoneNumber"),
    
    EMAILADDRESS("emailAddress"),
    
    BIRTHDATE("birthdate"),
    
    LOANCYCLE("loanCycle"),
    
    GROUPLOANCYCLE("groupLoanCycle"),
    
    PORTALSTATE("portalState");

    private String value;

    FieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldEnum fromValue(String value) {
      for (FieldEnum b : FieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIELD = "field";
  private FieldEnum field;

  /**
   * The sorting order: ASC or DESC. The default order is DESC.
   */
  public enum OrderEnum {
    ASC("ASC"),
    
    DESC("DESC");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderEnum fromValue(String value) {
      for (OrderEnum b : OrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ORDER = "order";
  private OrderEnum order;


  public ClientSortingCriteria field(FieldEnum field) {
    
    this.field = field;
    return this;
  }

   /**
   * Contains the field that can be used as sorting selection. Can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId].
   * @return field
  **/
  @ApiModelProperty(required = true, value = "Contains the field that can be used as sorting selection. Can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId].")
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldEnum getField() {
    return field;
  }


  public void setField(FieldEnum field) {
    this.field = field;
  }


  public ClientSortingCriteria order(OrderEnum order) {
    
    this.order = order;
    return this;
  }

   /**
   * The sorting order: ASC or DESC. The default order is DESC.
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The sorting order: ASC or DESC. The default order is DESC.")
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderEnum getOrder() {
    return order;
  }


  public void setOrder(OrderEnum order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientSortingCriteria clientSortingCriteria = (ClientSortingCriteria) o;
    return Objects.equals(this.field, clientSortingCriteria.field) &&
        Objects.equals(this.order, clientSortingCriteria.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientSortingCriteria {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

