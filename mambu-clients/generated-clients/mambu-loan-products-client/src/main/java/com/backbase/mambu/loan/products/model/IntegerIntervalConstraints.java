/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Decimal integer, like min/max/default.
 */
@ApiModel(description = "Decimal integer, like min/max/default.")
@JsonPropertyOrder({
  IntegerIntervalConstraints.JSON_PROPERTY_MIN_VALUE,
  IntegerIntervalConstraints.JSON_PROPERTY_ENCODED_KEY,
  IntegerIntervalConstraints.JSON_PROPERTY_DEFAULT_VALUE,
  IntegerIntervalConstraints.JSON_PROPERTY_MAX_VALUE
})

public class IntegerIntervalConstraints {
  public static final String JSON_PROPERTY_MIN_VALUE = "minValue";
  private Integer minValue;

  public static final String JSON_PROPERTY_ENCODED_KEY = "encodedKey";
  private String encodedKey;

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "defaultValue";
  private Integer defaultValue;

  public static final String JSON_PROPERTY_MAX_VALUE = "maxValue";
  private Integer maxValue;


  public IntegerIntervalConstraints minValue(Integer minValue) {
    
    this.minValue = minValue;
    return this;
  }

   /**
   * The minimum value.
   * @return minValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum value.")
  @JsonProperty(JSON_PROPERTY_MIN_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinValue() {
    return minValue;
  }


  public void setMinValue(Integer minValue) {
    this.minValue = minValue;
  }


   /**
   * The encoded key of the integer constraint, auto generated, unique
   * @return encodedKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encoded key of the integer constraint, auto generated, unique")
  @JsonProperty(JSON_PROPERTY_ENCODED_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncodedKey() {
    return encodedKey;
  }




  public IntegerIntervalConstraints defaultValue(Integer defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * The default value, will be used in case no other value was filled in by the user.
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default value, will be used in case no other value was filled in by the user.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDefaultValue() {
    return defaultValue;
  }


  public void setDefaultValue(Integer defaultValue) {
    this.defaultValue = defaultValue;
  }


  public IntegerIntervalConstraints maxValue(Integer maxValue) {
    
    this.maxValue = maxValue;
    return this;
  }

   /**
   * The maximum value.
   * @return maxValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum value.")
  @JsonProperty(JSON_PROPERTY_MAX_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxValue() {
    return maxValue;
  }


  public void setMaxValue(Integer maxValue) {
    this.maxValue = maxValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegerIntervalConstraints integerIntervalConstraints = (IntegerIntervalConstraints) o;
    return Objects.equals(this.minValue, integerIntervalConstraints.minValue) &&
        Objects.equals(this.encodedKey, integerIntervalConstraints.encodedKey) &&
        Objects.equals(this.defaultValue, integerIntervalConstraints.defaultValue) &&
        Objects.equals(this.maxValue, integerIntervalConstraints.maxValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minValue, encodedKey, defaultValue, maxValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegerIntervalConstraints {\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    encodedKey: ").append(toIndentedString(encodedKey)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

