/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.loan.products.model.GLAccountingRule;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Accounting settings, defines the accounting settings for the product.
 */
@ApiModel(description = "Accounting settings, defines the accounting settings for the product.")
@JsonPropertyOrder({
  AccountingSettings.JSON_PROPERTY_ACCOUNTING_METHOD,
  AccountingSettings.JSON_PROPERTY_INTEREST_ACCRUAL_CALCULATION,
  AccountingSettings.JSON_PROPERTY_ACCOUNTING_RULES,
  AccountingSettings.JSON_PROPERTY_INTEREST_ACCRUED_ACCOUNTING_METHOD
})

public class AccountingSettings {
  /**
   * A list of accounting rules for the product.
   */
  public enum AccountingMethodEnum {
    NONE("NONE"),
    
    CASH("CASH"),
    
    ACCRUAL("ACCRUAL");

    private String value;

    AccountingMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountingMethodEnum fromValue(String value) {
      for (AccountingMethodEnum b : AccountingMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNTING_METHOD = "accountingMethod";
  private AccountingMethodEnum accountingMethod;

  /**
   * The accounting interest calculation option selected for the product.
   */
  public enum InterestAccrualCalculationEnum {
    NONE("NONE"),
    
    AGGREGATED_AMOUNT("AGGREGATED_AMOUNT"),
    
    BREAKDOWN_PER_ACCOUNT("BREAKDOWN_PER_ACCOUNT");

    private String value;

    InterestAccrualCalculationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestAccrualCalculationEnum fromValue(String value) {
      for (InterestAccrualCalculationEnum b : InterestAccrualCalculationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_ACCRUAL_CALCULATION = "interestAccrualCalculation";
  private InterestAccrualCalculationEnum interestAccrualCalculation;

  public static final String JSON_PROPERTY_ACCOUNTING_RULES = "accountingRules";
  private List<GLAccountingRule> accountingRules = null;

  /**
   * A list of accounting rules for the product.
   */
  public enum InterestAccruedAccountingMethodEnum {
    NONE("NONE"),
    
    DAILY("DAILY"),
    
    END_OF_MONTH("END_OF_MONTH");

    private String value;

    InterestAccruedAccountingMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestAccruedAccountingMethodEnum fromValue(String value) {
      for (InterestAccruedAccountingMethodEnum b : InterestAccruedAccountingMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_ACCRUED_ACCOUNTING_METHOD = "interestAccruedAccountingMethod";
  private InterestAccruedAccountingMethodEnum interestAccruedAccountingMethod;


  public AccountingSettings accountingMethod(AccountingMethodEnum accountingMethod) {
    
    this.accountingMethod = accountingMethod;
    return this;
  }

   /**
   * A list of accounting rules for the product.
   * @return accountingMethod
  **/
  @ApiModelProperty(required = true, value = "A list of accounting rules for the product.")
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountingMethodEnum getAccountingMethod() {
    return accountingMethod;
  }


  public void setAccountingMethod(AccountingMethodEnum accountingMethod) {
    this.accountingMethod = accountingMethod;
  }


  public AccountingSettings interestAccrualCalculation(InterestAccrualCalculationEnum interestAccrualCalculation) {
    
    this.interestAccrualCalculation = interestAccrualCalculation;
    return this;
  }

   /**
   * The accounting interest calculation option selected for the product.
   * @return interestAccrualCalculation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The accounting interest calculation option selected for the product.")
  @JsonProperty(JSON_PROPERTY_INTEREST_ACCRUAL_CALCULATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestAccrualCalculationEnum getInterestAccrualCalculation() {
    return interestAccrualCalculation;
  }


  public void setInterestAccrualCalculation(InterestAccrualCalculationEnum interestAccrualCalculation) {
    this.interestAccrualCalculation = interestAccrualCalculation;
  }


  public AccountingSettings accountingRules(List<GLAccountingRule> accountingRules) {
    
    this.accountingRules = accountingRules;
    return this;
  }

  public AccountingSettings addAccountingRulesItem(GLAccountingRule accountingRulesItem) {
    if (this.accountingRules == null) {
      this.accountingRules = new ArrayList<>();
    }
    this.accountingRules.add(accountingRulesItem);
    return this;
  }

   /**
   * A list of accounting rules for the product.
   * @return accountingRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of accounting rules for the product.")
  @JsonProperty(JSON_PROPERTY_ACCOUNTING_RULES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GLAccountingRule> getAccountingRules() {
    return accountingRules;
  }


  public void setAccountingRules(List<GLAccountingRule> accountingRules) {
    this.accountingRules = accountingRules;
  }


  public AccountingSettings interestAccruedAccountingMethod(InterestAccruedAccountingMethodEnum interestAccruedAccountingMethod) {
    
    this.interestAccruedAccountingMethod = interestAccruedAccountingMethod;
    return this;
  }

   /**
   * A list of accounting rules for the product.
   * @return interestAccruedAccountingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of accounting rules for the product.")
  @JsonProperty(JSON_PROPERTY_INTEREST_ACCRUED_ACCOUNTING_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestAccruedAccountingMethodEnum getInterestAccruedAccountingMethod() {
    return interestAccruedAccountingMethod;
  }


  public void setInterestAccruedAccountingMethod(InterestAccruedAccountingMethodEnum interestAccruedAccountingMethod) {
    this.interestAccruedAccountingMethod = interestAccruedAccountingMethod;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountingSettings accountingSettings = (AccountingSettings) o;
    return Objects.equals(this.accountingMethod, accountingSettings.accountingMethod) &&
        Objects.equals(this.interestAccrualCalculation, accountingSettings.interestAccrualCalculation) &&
        Objects.equals(this.accountingRules, accountingSettings.accountingRules) &&
        Objects.equals(this.interestAccruedAccountingMethod, accountingSettings.interestAccruedAccountingMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountingMethod, interestAccrualCalculation, accountingRules, interestAccruedAccountingMethod);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountingSettings {\n");
    sb.append("    accountingMethod: ").append(toIndentedString(accountingMethod)).append("\n");
    sb.append("    interestAccrualCalculation: ").append(toIndentedString(interestAccrualCalculation)).append("\n");
    sb.append("    accountingRules: ").append(toIndentedString(accountingRules)).append("\n");
    sb.append("    interestAccruedAccountingMethod: ").append(toIndentedString(interestAccruedAccountingMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

