/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.loan.products.model.IntegerIntervalConstraints;
import com.backbase.mambu.loan.products.model.RoundingSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Defines the settings and constraints for schedule for the loans that are created based on this product.
 */
@ApiModel(description = "Defines the settings and constraints for schedule for the loans that are created based on this product.")
@JsonPropertyOrder({
  LoanProductScheduleSettings.JSON_PROPERTY_REPAYMENT_SCHEDULE_METHOD,
  LoanProductScheduleSettings.JSON_PROPERTY_REPAYMENT_PERIOD_UNIT,
  LoanProductScheduleSettings.JSON_PROPERTY_REPAYMENT_RESCHEDULING_METHOD,
  LoanProductScheduleSettings.JSON_PROPERTY_DEFAULT_REPAYMENT_PERIOD_COUNT,
  LoanProductScheduleSettings.JSON_PROPERTY_FIXED_DAYS_OF_MONTH,
  LoanProductScheduleSettings.JSON_PROPERTY_SHORT_MONTH_HANDLING_METHOD,
  LoanProductScheduleSettings.JSON_PROPERTY_REPAYMENT_SCHEDULE_EDIT_OPTIONS,
  LoanProductScheduleSettings.JSON_PROPERTY_SCHEDULE_DUE_DATES_METHOD,
  LoanProductScheduleSettings.JSON_PROPERTY_NUM_INSTALLMENTS,
  LoanProductScheduleSettings.JSON_PROPERTY_FIRST_REPAYMENT_DUE_DATE_OFFSET,
  LoanProductScheduleSettings.JSON_PROPERTY_ROUNDING_SETTINGS
})

public class LoanProductScheduleSettings {
  /**
   * The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account&#39;s life cycle or will be dynamically recomputed when required.
   */
  public enum RepaymentScheduleMethodEnum {
    NONE("NONE"),
    
    FIXED("FIXED"),
    
    DYNAMIC("DYNAMIC");

    private String value;

    RepaymentScheduleMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RepaymentScheduleMethodEnum fromValue(String value) {
      for (RepaymentScheduleMethodEnum b : RepaymentScheduleMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPAYMENT_SCHEDULE_METHOD = "repaymentScheduleMethod";
  private RepaymentScheduleMethodEnum repaymentScheduleMethod;

  /**
   * The frequency of the loan repayment.
   */
  public enum RepaymentPeriodUnitEnum {
    DAYS("DAYS"),
    
    WEEKS("WEEKS"),
    
    MONTHS("MONTHS"),
    
    YEARS("YEARS");

    private String value;

    RepaymentPeriodUnitEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RepaymentPeriodUnitEnum fromValue(String value) {
      for (RepaymentPeriodUnitEnum b : RepaymentPeriodUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPAYMENT_PERIOD_UNIT = "repaymentPeriodUnit";
  private RepaymentPeriodUnitEnum repaymentPeriodUnit;

  /**
   * The repayment rescheduling method used in calculations.
   */
  public enum RepaymentReschedulingMethodEnum {
    NONE("NONE"),
    
    NEXT_WORKING_DAY("NEXT_WORKING_DAY"),
    
    PREVIOUS_WORKING_DAY("PREVIOUS_WORKING_DAY"),
    
    EXTEND_SCHEDULE("EXTEND_SCHEDULE");

    private String value;

    RepaymentReschedulingMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RepaymentReschedulingMethodEnum fromValue(String value) {
      for (RepaymentReschedulingMethodEnum b : RepaymentReschedulingMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPAYMENT_RESCHEDULING_METHOD = "repaymentReschedulingMethod";
  private RepaymentReschedulingMethodEnum repaymentReschedulingMethod;

  public static final String JSON_PROPERTY_DEFAULT_REPAYMENT_PERIOD_COUNT = "defaultRepaymentPeriodCount";
  private Integer defaultRepaymentPeriodCount;

  public static final String JSON_PROPERTY_FIXED_DAYS_OF_MONTH = "fixedDaysOfMonth";
  private List<Integer> fixedDaysOfMonth = null;

  /**
   * Determines how to handle the short months, if they select a fixed day of month &gt; 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.
   */
  public enum ShortMonthHandlingMethodEnum {
    LAST_DAY_IN_MONTH("LAST_DAY_IN_MONTH"),
    
    FIRST_DAY_OF_NEXT_MONTH("FIRST_DAY_OF_NEXT_MONTH");

    private String value;

    ShortMonthHandlingMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShortMonthHandlingMethodEnum fromValue(String value) {
      for (ShortMonthHandlingMethodEnum b : ShortMonthHandlingMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SHORT_MONTH_HANDLING_METHOD = "shortMonthHandlingMethod";
  private ShortMonthHandlingMethodEnum shortMonthHandlingMethod;

  /**
   * Gets or Sets repaymentScheduleEditOptions
   */
  public enum RepaymentScheduleEditOptionsEnum {
    PAYMENT_DATES("ADJUST_PAYMENT_DATES"),
    
    PRINCIPAL_PAYMENT_SCHEDULE("ADJUST_PRINCIPAL_PAYMENT_SCHEDULE"),
    
    INTEREST_PAYMENT_SCHEDULE("ADJUST_INTEREST_PAYMENT_SCHEDULE"),
    
    FEE_PAYMENT_SCHEDULE("ADJUST_FEE_PAYMENT_SCHEDULE"),
    
    PENALTY_PAYMENT_SCHEDULE("ADJUST_PENALTY_PAYMENT_SCHEDULE"),
    
    NUMBER_OF_INSTALLMENTS("ADJUST_NUMBER_OF_INSTALLMENTS");

    private String value;

    RepaymentScheduleEditOptionsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RepaymentScheduleEditOptionsEnum fromValue(String value) {
      for (RepaymentScheduleEditOptionsEnum b : RepaymentScheduleEditOptionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPAYMENT_SCHEDULE_EDIT_OPTIONS = "repaymentScheduleEditOptions";
  private List<RepaymentScheduleEditOptionsEnum> repaymentScheduleEditOptions = null;

  /**
   * The methodology used by this product to compute the due dates of the repayments.
   */
  public enum ScheduleDueDatesMethodEnum {
    INTERVAL("INTERVAL"),
    
    FIXED_DAYS_OF_MONTH("FIXED_DAYS_OF_MONTH");

    private String value;

    ScheduleDueDatesMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScheduleDueDatesMethodEnum fromValue(String value) {
      for (ScheduleDueDatesMethodEnum b : ScheduleDueDatesMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCHEDULE_DUE_DATES_METHOD = "scheduleDueDatesMethod";
  private ScheduleDueDatesMethodEnum scheduleDueDatesMethod;

  public static final String JSON_PROPERTY_NUM_INSTALLMENTS = "numInstallments";
  private IntegerIntervalConstraints numInstallments;

  public static final String JSON_PROPERTY_FIRST_REPAYMENT_DUE_DATE_OFFSET = "firstRepaymentDueDateOffset";
  private IntegerIntervalConstraints firstRepaymentDueDateOffset;

  public static final String JSON_PROPERTY_ROUNDING_SETTINGS = "roundingSettings";
  private RoundingSettings roundingSettings;


  public LoanProductScheduleSettings repaymentScheduleMethod(RepaymentScheduleMethodEnum repaymentScheduleMethod) {
    
    this.repaymentScheduleMethod = repaymentScheduleMethod;
    return this;
  }

   /**
   * The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account&#39;s life cycle or will be dynamically recomputed when required.
   * @return repaymentScheduleMethod
  **/
  @ApiModelProperty(required = true, value = "The repayment schedule method. Represents the method that determines whether the schedule will be fixed all over the loan account's life cycle or will be dynamically recomputed when required.")
  @JsonProperty(JSON_PROPERTY_REPAYMENT_SCHEDULE_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RepaymentScheduleMethodEnum getRepaymentScheduleMethod() {
    return repaymentScheduleMethod;
  }


  public void setRepaymentScheduleMethod(RepaymentScheduleMethodEnum repaymentScheduleMethod) {
    this.repaymentScheduleMethod = repaymentScheduleMethod;
  }


  public LoanProductScheduleSettings repaymentPeriodUnit(RepaymentPeriodUnitEnum repaymentPeriodUnit) {
    
    this.repaymentPeriodUnit = repaymentPeriodUnit;
    return this;
  }

   /**
   * The frequency of the loan repayment.
   * @return repaymentPeriodUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The frequency of the loan repayment.")
  @JsonProperty(JSON_PROPERTY_REPAYMENT_PERIOD_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RepaymentPeriodUnitEnum getRepaymentPeriodUnit() {
    return repaymentPeriodUnit;
  }


  public void setRepaymentPeriodUnit(RepaymentPeriodUnitEnum repaymentPeriodUnit) {
    this.repaymentPeriodUnit = repaymentPeriodUnit;
  }


  public LoanProductScheduleSettings repaymentReschedulingMethod(RepaymentReschedulingMethodEnum repaymentReschedulingMethod) {
    
    this.repaymentReschedulingMethod = repaymentReschedulingMethod;
    return this;
  }

   /**
   * The repayment rescheduling method used in calculations.
   * @return repaymentReschedulingMethod
  **/
  @ApiModelProperty(required = true, value = "The repayment rescheduling method used in calculations.")
  @JsonProperty(JSON_PROPERTY_REPAYMENT_RESCHEDULING_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RepaymentReschedulingMethodEnum getRepaymentReschedulingMethod() {
    return repaymentReschedulingMethod;
  }


  public void setRepaymentReschedulingMethod(RepaymentReschedulingMethodEnum repaymentReschedulingMethod) {
    this.repaymentReschedulingMethod = repaymentReschedulingMethod;
  }


  public LoanProductScheduleSettings defaultRepaymentPeriodCount(Integer defaultRepaymentPeriodCount) {
    
    this.defaultRepaymentPeriodCount = defaultRepaymentPeriodCount;
    return this;
  }

   /**
   * Interval Repayment Methodology Settings.
   * @return defaultRepaymentPeriodCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interval Repayment Methodology Settings.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_REPAYMENT_PERIOD_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDefaultRepaymentPeriodCount() {
    return defaultRepaymentPeriodCount;
  }


  public void setDefaultRepaymentPeriodCount(Integer defaultRepaymentPeriodCount) {
    this.defaultRepaymentPeriodCount = defaultRepaymentPeriodCount;
  }


  public LoanProductScheduleSettings fixedDaysOfMonth(List<Integer> fixedDaysOfMonth) {
    
    this.fixedDaysOfMonth = fixedDaysOfMonth;
    return this;
  }

  public LoanProductScheduleSettings addFixedDaysOfMonthItem(Integer fixedDaysOfMonthItem) {
    if (this.fixedDaysOfMonth == null) {
      this.fixedDaysOfMonth = new ArrayList<>();
    }
    this.fixedDaysOfMonth.add(fixedDaysOfMonthItem);
    return this;
  }

   /**
   *  Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.
   * @return fixedDaysOfMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Specifies the days of the month when the repayment due dates should be. Only available if the Repayment Methodology is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTH.")
  @JsonProperty(JSON_PROPERTY_FIXED_DAYS_OF_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getFixedDaysOfMonth() {
    return fixedDaysOfMonth;
  }


  public void setFixedDaysOfMonth(List<Integer> fixedDaysOfMonth) {
    this.fixedDaysOfMonth = fixedDaysOfMonth;
  }


  public LoanProductScheduleSettings shortMonthHandlingMethod(ShortMonthHandlingMethodEnum shortMonthHandlingMethod) {
    
    this.shortMonthHandlingMethod = shortMonthHandlingMethod;
    return this;
  }

   /**
   * Determines how to handle the short months, if they select a fixed day of month &gt; 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.
   * @return shortMonthHandlingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines how to handle the short months, if they select a fixed day of month > 28. Will be null if no such date is selected and also for the Interval methodology. Only available if the Schedule Due Dates Method is ScheduleDueDatesMethodDTO#FIXED_DAYS_OF_MONTHs.")
  @JsonProperty(JSON_PROPERTY_SHORT_MONTH_HANDLING_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShortMonthHandlingMethodEnum getShortMonthHandlingMethod() {
    return shortMonthHandlingMethod;
  }


  public void setShortMonthHandlingMethod(ShortMonthHandlingMethodEnum shortMonthHandlingMethod) {
    this.shortMonthHandlingMethod = shortMonthHandlingMethod;
  }


  public LoanProductScheduleSettings repaymentScheduleEditOptions(List<RepaymentScheduleEditOptionsEnum> repaymentScheduleEditOptions) {
    
    this.repaymentScheduleEditOptions = repaymentScheduleEditOptions;
    return this;
  }

  public LoanProductScheduleSettings addRepaymentScheduleEditOptionsItem(RepaymentScheduleEditOptionsEnum repaymentScheduleEditOptionsItem) {
    if (this.repaymentScheduleEditOptions == null) {
      this.repaymentScheduleEditOptions = new ArrayList<>();
    }
    this.repaymentScheduleEditOptions.add(repaymentScheduleEditOptionsItem);
    return this;
  }

   /**
   * Shows the properties from the repayment schedule can be edited.
   * @return repaymentScheduleEditOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows the properties from the repayment schedule can be edited.")
  @JsonProperty(JSON_PROPERTY_REPAYMENT_SCHEDULE_EDIT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RepaymentScheduleEditOptionsEnum> getRepaymentScheduleEditOptions() {
    return repaymentScheduleEditOptions;
  }


  public void setRepaymentScheduleEditOptions(List<RepaymentScheduleEditOptionsEnum> repaymentScheduleEditOptions) {
    this.repaymentScheduleEditOptions = repaymentScheduleEditOptions;
  }


  public LoanProductScheduleSettings scheduleDueDatesMethod(ScheduleDueDatesMethodEnum scheduleDueDatesMethod) {
    
    this.scheduleDueDatesMethod = scheduleDueDatesMethod;
    return this;
  }

   /**
   * The methodology used by this product to compute the due dates of the repayments.
   * @return scheduleDueDatesMethod
  **/
  @ApiModelProperty(required = true, value = "The methodology used by this product to compute the due dates of the repayments.")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_DUE_DATES_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScheduleDueDatesMethodEnum getScheduleDueDatesMethod() {
    return scheduleDueDatesMethod;
  }


  public void setScheduleDueDatesMethod(ScheduleDueDatesMethodEnum scheduleDueDatesMethod) {
    this.scheduleDueDatesMethod = scheduleDueDatesMethod;
  }


  public LoanProductScheduleSettings numInstallments(IntegerIntervalConstraints numInstallments) {
    
    this.numInstallments = numInstallments;
    return this;
  }

   /**
   * Get numInstallments
   * @return numInstallments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NUM_INSTALLMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IntegerIntervalConstraints getNumInstallments() {
    return numInstallments;
  }


  public void setNumInstallments(IntegerIntervalConstraints numInstallments) {
    this.numInstallments = numInstallments;
  }


  public LoanProductScheduleSettings firstRepaymentDueDateOffset(IntegerIntervalConstraints firstRepaymentDueDateOffset) {
    
    this.firstRepaymentDueDateOffset = firstRepaymentDueDateOffset;
    return this;
  }

   /**
   * Get firstRepaymentDueDateOffset
   * @return firstRepaymentDueDateOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST_REPAYMENT_DUE_DATE_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IntegerIntervalConstraints getFirstRepaymentDueDateOffset() {
    return firstRepaymentDueDateOffset;
  }


  public void setFirstRepaymentDueDateOffset(IntegerIntervalConstraints firstRepaymentDueDateOffset) {
    this.firstRepaymentDueDateOffset = firstRepaymentDueDateOffset;
  }


  public LoanProductScheduleSettings roundingSettings(RoundingSettings roundingSettings) {
    
    this.roundingSettings = roundingSettings;
    return this;
  }

   /**
   * Get roundingSettings
   * @return roundingSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROUNDING_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoundingSettings getRoundingSettings() {
    return roundingSettings;
  }


  public void setRoundingSettings(RoundingSettings roundingSettings) {
    this.roundingSettings = roundingSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanProductScheduleSettings loanProductScheduleSettings = (LoanProductScheduleSettings) o;
    return Objects.equals(this.repaymentScheduleMethod, loanProductScheduleSettings.repaymentScheduleMethod) &&
        Objects.equals(this.repaymentPeriodUnit, loanProductScheduleSettings.repaymentPeriodUnit) &&
        Objects.equals(this.repaymentReschedulingMethod, loanProductScheduleSettings.repaymentReschedulingMethod) &&
        Objects.equals(this.defaultRepaymentPeriodCount, loanProductScheduleSettings.defaultRepaymentPeriodCount) &&
        Objects.equals(this.fixedDaysOfMonth, loanProductScheduleSettings.fixedDaysOfMonth) &&
        Objects.equals(this.shortMonthHandlingMethod, loanProductScheduleSettings.shortMonthHandlingMethod) &&
        Objects.equals(this.repaymentScheduleEditOptions, loanProductScheduleSettings.repaymentScheduleEditOptions) &&
        Objects.equals(this.scheduleDueDatesMethod, loanProductScheduleSettings.scheduleDueDatesMethod) &&
        Objects.equals(this.numInstallments, loanProductScheduleSettings.numInstallments) &&
        Objects.equals(this.firstRepaymentDueDateOffset, loanProductScheduleSettings.firstRepaymentDueDateOffset) &&
        Objects.equals(this.roundingSettings, loanProductScheduleSettings.roundingSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repaymentScheduleMethod, repaymentPeriodUnit, repaymentReschedulingMethod, defaultRepaymentPeriodCount, fixedDaysOfMonth, shortMonthHandlingMethod, repaymentScheduleEditOptions, scheduleDueDatesMethod, numInstallments, firstRepaymentDueDateOffset, roundingSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanProductScheduleSettings {\n");
    sb.append("    repaymentScheduleMethod: ").append(toIndentedString(repaymentScheduleMethod)).append("\n");
    sb.append("    repaymentPeriodUnit: ").append(toIndentedString(repaymentPeriodUnit)).append("\n");
    sb.append("    repaymentReschedulingMethod: ").append(toIndentedString(repaymentReschedulingMethod)).append("\n");
    sb.append("    defaultRepaymentPeriodCount: ").append(toIndentedString(defaultRepaymentPeriodCount)).append("\n");
    sb.append("    fixedDaysOfMonth: ").append(toIndentedString(fixedDaysOfMonth)).append("\n");
    sb.append("    shortMonthHandlingMethod: ").append(toIndentedString(shortMonthHandlingMethod)).append("\n");
    sb.append("    repaymentScheduleEditOptions: ").append(toIndentedString(repaymentScheduleEditOptions)).append("\n");
    sb.append("    scheduleDueDatesMethod: ").append(toIndentedString(scheduleDueDatesMethod)).append("\n");
    sb.append("    numInstallments: ").append(toIndentedString(numInstallments)).append("\n");
    sb.append("    firstRepaymentDueDateOffset: ").append(toIndentedString(firstRepaymentDueDateOffset)).append("\n");
    sb.append("    roundingSettings: ").append(toIndentedString(roundingSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

