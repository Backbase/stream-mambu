/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.loan.products.model.InterestProductSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.
 */
@ApiModel(description = "The interest settings, defines constraints regarding interest that will be used on the loan account crated based on this product.")
@JsonPropertyOrder({
  ProductInterestSettings.JSON_PROPERTY_INTEREST_CALCULATION_METHOD,
  ProductInterestSettings.JSON_PROPERTY_SCHEDULE_INTEREST_DAYS_COUNT_METHOD,
  ProductInterestSettings.JSON_PROPERTY_INTEREST_APPLICATION_METHOD,
  ProductInterestSettings.JSON_PROPERTY_INTEREST_TYPE,
  ProductInterestSettings.JSON_PROPERTY_INDEX_RATE_SETTINGS,
  ProductInterestSettings.JSON_PROPERTY_INTEREST_BALANCE_CALCULATION_METHOD,
  ProductInterestSettings.JSON_PROPERTY_DAYS_IN_YEAR,
  ProductInterestSettings.JSON_PROPERTY_ACCRUE_LATE_INTEREST
})

public class ProductInterestSettings {
  /**
   * The interest calculation method. Holds the type of interest calculation method.
   */
  public enum InterestCalculationMethodEnum {
    FLAT("FLAT"),
    
    DECLINING_BALANCE("DECLINING_BALANCE"),
    
    DECLINING_BALANCE_DISCOUNTED("DECLINING_BALANCE_DISCOUNTED");

    private String value;

    InterestCalculationMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestCalculationMethodEnum fromValue(String value) {
      for (InterestCalculationMethodEnum b : InterestCalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_CALCULATION_METHOD = "interestCalculationMethod";
  private InterestCalculationMethodEnum interestCalculationMethod;

  /**
   * Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.
   */
  public enum ScheduleInterestDaysCountMethodEnum {
    REPAYMENT_PERIODICITY("REPAYMENT_PERIODICITY"),
    
    ACTUAL_DAYS_COUNT("ACTUAL_DAYS_COUNT");

    private String value;

    ScheduleInterestDaysCountMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScheduleInterestDaysCountMethodEnum fromValue(String value) {
      for (ScheduleInterestDaysCountMethodEnum b : ScheduleInterestDaysCountMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCHEDULE_INTEREST_DAYS_COUNT_METHOD = "scheduleInterestDaysCountMethod";
  private ScheduleInterestDaysCountMethodEnum scheduleInterestDaysCountMethod;

  /**
   * The interest application method. Represents the interest application method that determines whether the interest gets applied on the account&#39;s disbursement or on each repayment.
   */
  public enum InterestApplicationMethodEnum {
    AFTER_DISBURSEMENT("AFTER_DISBURSEMENT"),
    
    REPAYMENT_DUE_DATE("REPAYMENT_DUE_DATE");

    private String value;

    InterestApplicationMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestApplicationMethodEnum fromValue(String value) {
      for (InterestApplicationMethodEnum b : InterestApplicationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_APPLICATION_METHOD = "interestApplicationMethod";
  private InterestApplicationMethodEnum interestApplicationMethod;

  /**
   * The possible values for how we compute and apply the interest
   */
  public enum InterestTypeEnum {
    SIMPLE_INTEREST("SIMPLE_INTEREST"),
    
    CAPITALIZED_INTEREST("CAPITALIZED_INTEREST");

    private String value;

    InterestTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestTypeEnum fromValue(String value) {
      for (InterestTypeEnum b : InterestTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_TYPE = "interestType";
  private InterestTypeEnum interestType;

  public static final String JSON_PROPERTY_INDEX_RATE_SETTINGS = "indexRateSettings";
  private InterestProductSettings indexRateSettings;

  /**
   * The interest balance calculation method. Represents the option which determines the way the balance for the account&#39;s interest is computed.
   */
  public enum InterestBalanceCalculationMethodEnum {
    ONLY_PRINCIPAL("ONLY_PRINCIPAL"),
    
    PRINCIPAL_AND_INTEREST("PRINCIPAL_AND_INTEREST");

    private String value;

    InterestBalanceCalculationMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InterestBalanceCalculationMethodEnum fromValue(String value) {
      for (InterestBalanceCalculationMethodEnum b : InterestBalanceCalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INTEREST_BALANCE_CALCULATION_METHOD = "interestBalanceCalculationMethod";
  private InterestBalanceCalculationMethodEnum interestBalanceCalculationMethod;

  /**
   * The days in year that should be used for loan calculations.
   */
  public enum DaysInYearEnum {
    ACTUAL_365_FIXED("ACTUAL_365_FIXED"),
    
    ACTUAL_364("ACTUAL_364"),
    
    ACTUAL_360("ACTUAL_360"),
    
    ACTUAL_ACTUAL_ISDA("ACTUAL_ACTUAL_ISDA"),
    
    E30_360("E30_360"),
    
    E30_42_365("E30_42_365");

    private String value;

    DaysInYearEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DaysInYearEnum fromValue(String value) {
      for (DaysInYearEnum b : DaysInYearEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DAYS_IN_YEAR = "daysInYear";
  private DaysInYearEnum daysInYear;

  public static final String JSON_PROPERTY_ACCRUE_LATE_INTEREST = "accrueLateInterest";
  private Boolean accrueLateInterest;


  public ProductInterestSettings interestCalculationMethod(InterestCalculationMethodEnum interestCalculationMethod) {
    
    this.interestCalculationMethod = interestCalculationMethod;
    return this;
  }

   /**
   * The interest calculation method. Holds the type of interest calculation method.
   * @return interestCalculationMethod
  **/
  @ApiModelProperty(required = true, value = "The interest calculation method. Holds the type of interest calculation method.")
  @JsonProperty(JSON_PROPERTY_INTEREST_CALCULATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InterestCalculationMethodEnum getInterestCalculationMethod() {
    return interestCalculationMethod;
  }


  public void setInterestCalculationMethod(InterestCalculationMethodEnum interestCalculationMethod) {
    this.interestCalculationMethod = interestCalculationMethod;
  }


  public ProductInterestSettings scheduleInterestDaysCountMethod(ScheduleInterestDaysCountMethodEnum scheduleInterestDaysCountMethod) {
    
    this.scheduleInterestDaysCountMethod = scheduleInterestDaysCountMethod;
    return this;
  }

   /**
   * Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.
   * @return scheduleInterestDaysCountMethod
  **/
  @ApiModelProperty(required = true, value = "Shows  whether all the installments should compute the interest based on the actual number of days or based on the defined repayment periodicity.")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_INTEREST_DAYS_COUNT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScheduleInterestDaysCountMethodEnum getScheduleInterestDaysCountMethod() {
    return scheduleInterestDaysCountMethod;
  }


  public void setScheduleInterestDaysCountMethod(ScheduleInterestDaysCountMethodEnum scheduleInterestDaysCountMethod) {
    this.scheduleInterestDaysCountMethod = scheduleInterestDaysCountMethod;
  }


  public ProductInterestSettings interestApplicationMethod(InterestApplicationMethodEnum interestApplicationMethod) {
    
    this.interestApplicationMethod = interestApplicationMethod;
    return this;
  }

   /**
   * The interest application method. Represents the interest application method that determines whether the interest gets applied on the account&#39;s disbursement or on each repayment.
   * @return interestApplicationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interest application method. Represents the interest application method that determines whether the interest gets applied on the account's disbursement or on each repayment.")
  @JsonProperty(JSON_PROPERTY_INTEREST_APPLICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestApplicationMethodEnum getInterestApplicationMethod() {
    return interestApplicationMethod;
  }


  public void setInterestApplicationMethod(InterestApplicationMethodEnum interestApplicationMethod) {
    this.interestApplicationMethod = interestApplicationMethod;
  }


  public ProductInterestSettings interestType(InterestTypeEnum interestType) {
    
    this.interestType = interestType;
    return this;
  }

   /**
   * The possible values for how we compute and apply the interest
   * @return interestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The possible values for how we compute and apply the interest")
  @JsonProperty(JSON_PROPERTY_INTEREST_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestTypeEnum getInterestType() {
    return interestType;
  }


  public void setInterestType(InterestTypeEnum interestType) {
    this.interestType = interestType;
  }


  public ProductInterestSettings indexRateSettings(InterestProductSettings indexRateSettings) {
    
    this.indexRateSettings = indexRateSettings;
    return this;
  }

   /**
   * Get indexRateSettings
   * @return indexRateSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDEX_RATE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestProductSettings getIndexRateSettings() {
    return indexRateSettings;
  }


  public void setIndexRateSettings(InterestProductSettings indexRateSettings) {
    this.indexRateSettings = indexRateSettings;
  }


  public ProductInterestSettings interestBalanceCalculationMethod(InterestBalanceCalculationMethodEnum interestBalanceCalculationMethod) {
    
    this.interestBalanceCalculationMethod = interestBalanceCalculationMethod;
    return this;
  }

   /**
   * The interest balance calculation method. Represents the option which determines the way the balance for the account&#39;s interest is computed.
   * @return interestBalanceCalculationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interest balance calculation method. Represents the option which determines the way the balance for the account's interest is computed.")
  @JsonProperty(JSON_PROPERTY_INTEREST_BALANCE_CALCULATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestBalanceCalculationMethodEnum getInterestBalanceCalculationMethod() {
    return interestBalanceCalculationMethod;
  }


  public void setInterestBalanceCalculationMethod(InterestBalanceCalculationMethodEnum interestBalanceCalculationMethod) {
    this.interestBalanceCalculationMethod = interestBalanceCalculationMethod;
  }


  public ProductInterestSettings daysInYear(DaysInYearEnum daysInYear) {
    
    this.daysInYear = daysInYear;
    return this;
  }

   /**
   * The days in year that should be used for loan calculations.
   * @return daysInYear
  **/
  @ApiModelProperty(required = true, value = "The days in year that should be used for loan calculations.")
  @JsonProperty(JSON_PROPERTY_DAYS_IN_YEAR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DaysInYearEnum getDaysInYear() {
    return daysInYear;
  }


  public void setDaysInYear(DaysInYearEnum daysInYear) {
    this.daysInYear = daysInYear;
  }


  public ProductInterestSettings accrueLateInterest(Boolean accrueLateInterest) {
    
    this.accrueLateInterest = accrueLateInterest;
    return this;
  }

   /**
   * Whether late interest should be accrued, applied and paid
   * @return accrueLateInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether late interest should be accrued, applied and paid")
  @JsonProperty(JSON_PROPERTY_ACCRUE_LATE_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAccrueLateInterest() {
    return accrueLateInterest;
  }


  public void setAccrueLateInterest(Boolean accrueLateInterest) {
    this.accrueLateInterest = accrueLateInterest;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductInterestSettings productInterestSettings = (ProductInterestSettings) o;
    return Objects.equals(this.interestCalculationMethod, productInterestSettings.interestCalculationMethod) &&
        Objects.equals(this.scheduleInterestDaysCountMethod, productInterestSettings.scheduleInterestDaysCountMethod) &&
        Objects.equals(this.interestApplicationMethod, productInterestSettings.interestApplicationMethod) &&
        Objects.equals(this.interestType, productInterestSettings.interestType) &&
        Objects.equals(this.indexRateSettings, productInterestSettings.indexRateSettings) &&
        Objects.equals(this.interestBalanceCalculationMethod, productInterestSettings.interestBalanceCalculationMethod) &&
        Objects.equals(this.daysInYear, productInterestSettings.daysInYear) &&
        Objects.equals(this.accrueLateInterest, productInterestSettings.accrueLateInterest);
  }

  @Override
  public int hashCode() {
    return Objects.hash(interestCalculationMethod, scheduleInterestDaysCountMethod, interestApplicationMethod, interestType, indexRateSettings, interestBalanceCalculationMethod, daysInYear, accrueLateInterest);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductInterestSettings {\n");
    sb.append("    interestCalculationMethod: ").append(toIndentedString(interestCalculationMethod)).append("\n");
    sb.append("    scheduleInterestDaysCountMethod: ").append(toIndentedString(scheduleInterestDaysCountMethod)).append("\n");
    sb.append("    interestApplicationMethod: ").append(toIndentedString(interestApplicationMethod)).append("\n");
    sb.append("    interestType: ").append(toIndentedString(interestType)).append("\n");
    sb.append("    indexRateSettings: ").append(toIndentedString(indexRateSettings)).append("\n");
    sb.append("    interestBalanceCalculationMethod: ").append(toIndentedString(interestBalanceCalculationMethod)).append("\n");
    sb.append("    daysInYear: ").append(toIndentedString(daysInYear)).append("\n");
    sb.append("    accrueLateInterest: ").append(toIndentedString(accrueLateInterest)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

