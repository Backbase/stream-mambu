/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Defines the settings for account linking.
 */
@ApiModel(description = "Defines the settings for account linking.")
@JsonPropertyOrder({
  AccountLinkSettings.JSON_PROPERTY_LINKED_ACCOUNT_OPTIONS,
  AccountLinkSettings.JSON_PROPERTY_SETTLEMENT_METHOD,
  AccountLinkSettings.JSON_PROPERTY_ENABLED,
  AccountLinkSettings.JSON_PROPERTY_LINKABLE_DEPOSIT_PRODUCT_KEY
})

public class AccountLinkSettings {
  /**
   * Gets or Sets linkedAccountOptions
   */
  public enum LinkedAccountOptionsEnum {
    LINK_ACCOUNTS("AUTO_LINK_ACCOUNTS"),
    
    CREATE_LINKED_ACCOUNTS("AUTO_CREATE_LINKED_ACCOUNTS");

    private String value;

    LinkedAccountOptionsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LinkedAccountOptionsEnum fromValue(String value) {
      for (LinkedAccountOptionsEnum b : LinkedAccountOptionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LINKED_ACCOUNT_OPTIONS = "linkedAccountOptions";
  private List<LinkedAccountOptionsEnum> linkedAccountOptions = null;

  /**
   * Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.
   */
  public enum SettlementMethodEnum {
    FULL_DUE_AMOUNTS("FULL_DUE_AMOUNTS"),
    
    PARTIAL_DUE_AMOUNTS("PARTIAL_DUE_AMOUNTS"),
    
    NO_AUTOMATED_TRANSFERS("NO_AUTOMATED_TRANSFERS");

    private String value;

    SettlementMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SettlementMethodEnum fromValue(String value) {
      for (SettlementMethodEnum b : SettlementMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SETTLEMENT_METHOD = "settlementMethod";
  private SettlementMethodEnum settlementMethod;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_LINKABLE_DEPOSIT_PRODUCT_KEY = "linkableDepositProductKey";
  private String linkableDepositProductKey;


  public AccountLinkSettings linkedAccountOptions(List<LinkedAccountOptionsEnum> linkedAccountOptions) {
    
    this.linkedAccountOptions = linkedAccountOptions;
    return this;
  }

  public AccountLinkSettings addLinkedAccountOptionsItem(LinkedAccountOptionsEnum linkedAccountOptionsItem) {
    if (this.linkedAccountOptions == null) {
      this.linkedAccountOptions = new ArrayList<>();
    }
    this.linkedAccountOptions.add(linkedAccountOptionsItem);
    return this;
  }

   /**
   * A set of linked account options.
   * @return linkedAccountOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A set of linked account options.")
  @JsonProperty(JSON_PROPERTY_LINKED_ACCOUNT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LinkedAccountOptionsEnum> getLinkedAccountOptions() {
    return linkedAccountOptions;
  }


  public void setLinkedAccountOptions(List<LinkedAccountOptionsEnum> linkedAccountOptions) {
    this.linkedAccountOptions = linkedAccountOptions;
  }


  public AccountLinkSettings settlementMethod(SettlementMethodEnum settlementMethod) {
    
    this.settlementMethod = settlementMethod;
    return this;
  }

   /**
   * Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.
   * @return settlementMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the option of automated transfer that should be made from linked deposit accounts into loan accounts create from this product.")
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SettlementMethodEnum getSettlementMethod() {
    return settlementMethod;
  }


  public void setSettlementMethod(SettlementMethodEnum settlementMethod) {
    this.settlementMethod = settlementMethod;
  }


  public AccountLinkSettings enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Shows whether the loan accounts created using this product can be linked to a savings account.
   * @return enabled
  **/
  @ApiModelProperty(required = true, value = "Shows whether the loan accounts created using this product can be linked to a savings account.")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public AccountLinkSettings linkableDepositProductKey(String linkableDepositProductKey) {
    
    this.linkableDepositProductKey = linkableDepositProductKey;
    return this;
  }

   /**
   * Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account.
   * @return linkableDepositProductKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Loan accounts created for this product can only be linked the the savings accounts that use the savings product with this key. If null, the loan accounts for this product can be linked to any savings account.")
  @JsonProperty(JSON_PROPERTY_LINKABLE_DEPOSIT_PRODUCT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLinkableDepositProductKey() {
    return linkableDepositProductKey;
  }


  public void setLinkableDepositProductKey(String linkableDepositProductKey) {
    this.linkableDepositProductKey = linkableDepositProductKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLinkSettings accountLinkSettings = (AccountLinkSettings) o;
    return Objects.equals(this.linkedAccountOptions, accountLinkSettings.linkedAccountOptions) &&
        Objects.equals(this.settlementMethod, accountLinkSettings.settlementMethod) &&
        Objects.equals(this.enabled, accountLinkSettings.enabled) &&
        Objects.equals(this.linkableDepositProductKey, accountLinkSettings.linkableDepositProductKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkedAccountOptions, settlementMethod, enabled, linkableDepositProductKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLinkSettings {\n");
    sb.append("    linkedAccountOptions: ").append(toIndentedString(linkedAccountOptions)).append("\n");
    sb.append("    settlementMethod: ").append(toIndentedString(settlementMethod)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    linkableDepositProductKey: ").append(toIndentedString(linkableDepositProductKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

