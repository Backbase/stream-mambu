/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Holds information about branch availability for the product.
 */
@ApiModel(description = "Holds information about branch availability for the product.")
@JsonPropertyOrder({
  BranchSettings.JSON_PROPERTY_FOR_ALL_BRANCHES,
  BranchSettings.JSON_PROPERTY_AVAILABLE_PRODUCT_BRANCHES
})

public class BranchSettings {
  public static final String JSON_PROPERTY_FOR_ALL_BRANCHES = "forAllBranches";
  private Boolean forAllBranches;

  public static final String JSON_PROPERTY_AVAILABLE_PRODUCT_BRANCHES = "availableProductBranches";
  private List<String> availableProductBranches = null;


  public BranchSettings forAllBranches(Boolean forAllBranches) {
    
    this.forAllBranches = forAllBranches;
    return this;
  }

   /**
   * Indicates if this product should be available for all branches
   * @return forAllBranches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this product should be available for all branches")
  @JsonProperty(JSON_PROPERTY_FOR_ALL_BRANCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getForAllBranches() {
    return forAllBranches;
  }


  public void setForAllBranches(Boolean forAllBranches) {
    this.forAllBranches = forAllBranches;
  }


  public BranchSettings availableProductBranches(List<String> availableProductBranches) {
    
    this.availableProductBranches = availableProductBranches;
    return this;
  }

  public BranchSettings addAvailableProductBranchesItem(String availableProductBranchesItem) {
    if (this.availableProductBranches == null) {
      this.availableProductBranches = new ArrayList<>();
    }
    this.availableProductBranches.add(availableProductBranchesItem);
    return this;
  }

   /**
   * Holds the encoded keys of the branches this product should be available for.
   * @return availableProductBranches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Holds the encoded keys of the branches this product should be available for.")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_PRODUCT_BRANCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAvailableProductBranches() {
    return availableProductBranches;
  }


  public void setAvailableProductBranches(List<String> availableProductBranches) {
    this.availableProductBranches = availableProductBranches;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchSettings branchSettings = (BranchSettings) o;
    return Objects.equals(this.forAllBranches, branchSettings.forAllBranches) &&
        Objects.equals(this.availableProductBranches, branchSettings.availableProductBranches);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forAllBranches, availableProductBranches);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchSettings {\n");
    sb.append("    forAllBranches: ").append(toIndentedString(forAllBranches)).append("\n");
    sb.append("    availableProductBranches: ").append(toIndentedString(availableProductBranches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

