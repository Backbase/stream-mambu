/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Tax settings, defines some settings for taxes on the loan product
 */
@ApiModel(description = "Tax settings, defines some settings for taxes on the loan product")
@JsonPropertyOrder({
  TaxSettings.JSON_PROPERTY_TAX_SOURCE_KEY,
  TaxSettings.JSON_PROPERTY_TAXES_ON_INTEREST_ENABLED,
  TaxSettings.JSON_PROPERTY_TAXES_ON_PENALTY_ENABLED,
  TaxSettings.JSON_PROPERTY_TAX_CALCULATION_METHOD,
  TaxSettings.JSON_PROPERTY_TAXES_ON_FEES_ENABLED
})

public class TaxSettings {
  public static final String JSON_PROPERTY_TAX_SOURCE_KEY = "taxSourceKey";
  private String taxSourceKey;

  public static final String JSON_PROPERTY_TAXES_ON_INTEREST_ENABLED = "taxesOnInterestEnabled";
  private Boolean taxesOnInterestEnabled;

  public static final String JSON_PROPERTY_TAXES_ON_PENALTY_ENABLED = "taxesOnPenaltyEnabled";
  private Boolean taxesOnPenaltyEnabled;

  /**
   * Shows whether the tax is added on top of the target amount or not.
   */
  public enum TaxCalculationMethodEnum {
    INCLUSIVE("INCLUSIVE"),
    
    EXCLUSIVE("EXCLUSIVE");

    private String value;

    TaxCalculationMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TaxCalculationMethodEnum fromValue(String value) {
      for (TaxCalculationMethodEnum b : TaxCalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TAX_CALCULATION_METHOD = "taxCalculationMethod";
  private TaxCalculationMethodEnum taxCalculationMethod;

  public static final String JSON_PROPERTY_TAXES_ON_FEES_ENABLED = "taxesOnFeesEnabled";
  private Boolean taxesOnFeesEnabled;


  public TaxSettings taxSourceKey(String taxSourceKey) {
    
    this.taxSourceKey = taxSourceKey;
    return this;
  }

   /**
   * The tax source from where the loan account taxes will be updated.
   * @return taxSourceKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax source from where the loan account taxes will be updated.")
  @JsonProperty(JSON_PROPERTY_TAX_SOURCE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxSourceKey() {
    return taxSourceKey;
  }


  public void setTaxSourceKey(String taxSourceKey) {
    this.taxSourceKey = taxSourceKey;
  }


  public TaxSettings taxesOnInterestEnabled(Boolean taxesOnInterestEnabled) {
    
    this.taxesOnInterestEnabled = taxesOnInterestEnabled;
    return this;
  }

   /**
   * Shows whether taxes on interest are enabled for this product or not.
   * @return taxesOnInterestEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether taxes on interest are enabled for this product or not.")
  @JsonProperty(JSON_PROPERTY_TAXES_ON_INTEREST_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxesOnInterestEnabled() {
    return taxesOnInterestEnabled;
  }


  public void setTaxesOnInterestEnabled(Boolean taxesOnInterestEnabled) {
    this.taxesOnInterestEnabled = taxesOnInterestEnabled;
  }


  public TaxSettings taxesOnPenaltyEnabled(Boolean taxesOnPenaltyEnabled) {
    
    this.taxesOnPenaltyEnabled = taxesOnPenaltyEnabled;
    return this;
  }

   /**
   * Shows whether taxes on penalties are enabled for this product or not.
   * @return taxesOnPenaltyEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether taxes on penalties are enabled for this product or not.")
  @JsonProperty(JSON_PROPERTY_TAXES_ON_PENALTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxesOnPenaltyEnabled() {
    return taxesOnPenaltyEnabled;
  }


  public void setTaxesOnPenaltyEnabled(Boolean taxesOnPenaltyEnabled) {
    this.taxesOnPenaltyEnabled = taxesOnPenaltyEnabled;
  }


  public TaxSettings taxCalculationMethod(TaxCalculationMethodEnum taxCalculationMethod) {
    
    this.taxCalculationMethod = taxCalculationMethod;
    return this;
  }

   /**
   * Shows whether the tax is added on top of the target amount or not.
   * @return taxCalculationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether the tax is added on top of the target amount or not.")
  @JsonProperty(JSON_PROPERTY_TAX_CALCULATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaxCalculationMethodEnum getTaxCalculationMethod() {
    return taxCalculationMethod;
  }


  public void setTaxCalculationMethod(TaxCalculationMethodEnum taxCalculationMethod) {
    this.taxCalculationMethod = taxCalculationMethod;
  }


  public TaxSettings taxesOnFeesEnabled(Boolean taxesOnFeesEnabled) {
    
    this.taxesOnFeesEnabled = taxesOnFeesEnabled;
    return this;
  }

   /**
   * Shows whether taxes on fees are enabled for this product or not.
   * @return taxesOnFeesEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether taxes on fees are enabled for this product or not.")
  @JsonProperty(JSON_PROPERTY_TAXES_ON_FEES_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxesOnFeesEnabled() {
    return taxesOnFeesEnabled;
  }


  public void setTaxesOnFeesEnabled(Boolean taxesOnFeesEnabled) {
    this.taxesOnFeesEnabled = taxesOnFeesEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxSettings taxSettings = (TaxSettings) o;
    return Objects.equals(this.taxSourceKey, taxSettings.taxSourceKey) &&
        Objects.equals(this.taxesOnInterestEnabled, taxSettings.taxesOnInterestEnabled) &&
        Objects.equals(this.taxesOnPenaltyEnabled, taxSettings.taxesOnPenaltyEnabled) &&
        Objects.equals(this.taxCalculationMethod, taxSettings.taxCalculationMethod) &&
        Objects.equals(this.taxesOnFeesEnabled, taxSettings.taxesOnFeesEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxSourceKey, taxesOnInterestEnabled, taxesOnPenaltyEnabled, taxCalculationMethod, taxesOnFeesEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxSettings {\n");
    sb.append("    taxSourceKey: ").append(toIndentedString(taxSourceKey)).append("\n");
    sb.append("    taxesOnInterestEnabled: ").append(toIndentedString(taxesOnInterestEnabled)).append("\n");
    sb.append("    taxesOnPenaltyEnabled: ").append(toIndentedString(taxesOnPenaltyEnabled)).append("\n");
    sb.append("    taxCalculationMethod: ").append(toIndentedString(taxCalculationMethod)).append("\n");
    sb.append("    taxesOnFeesEnabled: ").append(toIndentedString(taxesOnFeesEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

