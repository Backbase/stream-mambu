/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The funding settings, holds the settings regarding the funding for the loan product.
 */
@ApiModel(description = "The funding settings, holds the settings regarding the funding for the loan product.")
@JsonPropertyOrder({
  CreditArrangementSettings.JSON_PROPERTY_CREDIT_ARRANGEMENT_REQUIREMENT
})

public class CreditArrangementSettings {
  /**
   * Shows whether accounts created after this product can/should be part of a line of credit.
   */
  public enum CreditArrangementRequirementEnum {
    OPTIONAL("OPTIONAL"),
    
    REQUIRED("REQUIRED"),
    
    NOT_REQUIRED("NOT_REQUIRED");

    private String value;

    CreditArrangementRequirementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CreditArrangementRequirementEnum fromValue(String value) {
      for (CreditArrangementRequirementEnum b : CreditArrangementRequirementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CREDIT_ARRANGEMENT_REQUIREMENT = "creditArrangementRequirement";
  private CreditArrangementRequirementEnum creditArrangementRequirement;


  public CreditArrangementSettings creditArrangementRequirement(CreditArrangementRequirementEnum creditArrangementRequirement) {
    
    this.creditArrangementRequirement = creditArrangementRequirement;
    return this;
  }

   /**
   * Shows whether accounts created after this product can/should be part of a line of credit.
   * @return creditArrangementRequirement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether accounts created after this product can/should be part of a line of credit.")
  @JsonProperty(JSON_PROPERTY_CREDIT_ARRANGEMENT_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreditArrangementRequirementEnum getCreditArrangementRequirement() {
    return creditArrangementRequirement;
  }


  public void setCreditArrangementRequirement(CreditArrangementRequirementEnum creditArrangementRequirement) {
    this.creditArrangementRequirement = creditArrangementRequirement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditArrangementSettings creditArrangementSettings = (CreditArrangementSettings) o;
    return Objects.equals(this.creditArrangementRequirement, creditArrangementSettings.creditArrangementRequirement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditArrangementRequirement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditArrangementSettings {\n");
    sb.append("    creditArrangementRequirement: ").append(toIndentedString(creditArrangementRequirement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

