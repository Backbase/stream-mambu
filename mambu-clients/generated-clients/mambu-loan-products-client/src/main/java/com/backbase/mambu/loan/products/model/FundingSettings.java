/*
 * loanproducts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loan.products.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.loan.products.model.DecimalConstraints;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The funding settings, holds the settings regarding the funding for the loan product.
 */
@ApiModel(description = "The funding settings, holds the settings regarding the funding for the loan product.")
@JsonPropertyOrder({
  FundingSettings.JSON_PROPERTY_ORGANIZATION_INTEREST_COMMISSION,
  FundingSettings.JSON_PROPERTY_LOCK_FUNDS_AT_APPROVAL,
  FundingSettings.JSON_PROPERTY_FUNDER_INTEREST_COMMISSION,
  FundingSettings.JSON_PROPERTY_REQUIRED_FUNDS,
  FundingSettings.JSON_PROPERTY_FUNDER_INTEREST_COMMISSION_ALLOCATION_TYPE,
  FundingSettings.JSON_PROPERTY_ENABLED
})

public class FundingSettings {
  public static final String JSON_PROPERTY_ORGANIZATION_INTEREST_COMMISSION = "organizationInterestCommission";
  private DecimalConstraints organizationInterestCommission;

  public static final String JSON_PROPERTY_LOCK_FUNDS_AT_APPROVAL = "lockFundsAtApproval";
  private Boolean lockFundsAtApproval;

  public static final String JSON_PROPERTY_FUNDER_INTEREST_COMMISSION = "funderInterestCommission";
  private DecimalConstraints funderInterestCommission;

  public static final String JSON_PROPERTY_REQUIRED_FUNDS = "requiredFunds";
  private BigDecimal requiredFunds;

  /**
   * Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).
   */
  public enum FunderInterestCommissionAllocationTypeEnum {
    PERCENTAGE_OF_LOAN_FUNDING("PERCENTAGE_OF_LOAN_FUNDING"),
    
    FIXED_INTEREST_COMMISSIONS("FIXED_INTEREST_COMMISSIONS");

    private String value;

    FunderInterestCommissionAllocationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FunderInterestCommissionAllocationTypeEnum fromValue(String value) {
      for (FunderInterestCommissionAllocationTypeEnum b : FunderInterestCommissionAllocationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FUNDER_INTEREST_COMMISSION_ALLOCATION_TYPE = "funderInterestCommissionAllocationType";
  private FunderInterestCommissionAllocationTypeEnum funderInterestCommissionAllocationType;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;


  public FundingSettings organizationInterestCommission(DecimalConstraints organizationInterestCommission) {
    
    this.organizationInterestCommission = organizationInterestCommission;
    return this;
  }

   /**
   * Get organizationInterestCommission
   * @return organizationInterestCommission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_INTEREST_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DecimalConstraints getOrganizationInterestCommission() {
    return organizationInterestCommission;
  }


  public void setOrganizationInterestCommission(DecimalConstraints organizationInterestCommission) {
    this.organizationInterestCommission = organizationInterestCommission;
  }


  public FundingSettings lockFundsAtApproval(Boolean lockFundsAtApproval) {
    
    this.lockFundsAtApproval = lockFundsAtApproval;
    return this;
  }

   /**
   * Shows whether investor funds are locked or not at the loan account&#39;s approval.
   * @return lockFundsAtApproval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether investor funds are locked or not at the loan account's approval.")
  @JsonProperty(JSON_PROPERTY_LOCK_FUNDS_AT_APPROVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLockFundsAtApproval() {
    return lockFundsAtApproval;
  }


  public void setLockFundsAtApproval(Boolean lockFundsAtApproval) {
    this.lockFundsAtApproval = lockFundsAtApproval;
  }


  public FundingSettings funderInterestCommission(DecimalConstraints funderInterestCommission) {
    
    this.funderInterestCommission = funderInterestCommission;
    return this;
  }

   /**
   * Get funderInterestCommission
   * @return funderInterestCommission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUNDER_INTEREST_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DecimalConstraints getFunderInterestCommission() {
    return funderInterestCommission;
  }


  public void setFunderInterestCommission(DecimalConstraints funderInterestCommission) {
    this.funderInterestCommission = funderInterestCommission;
  }


  public FundingSettings requiredFunds(BigDecimal requiredFunds) {
    
    this.requiredFunds = requiredFunds;
    return this;
  }

   /**
   * The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled.
   * @return requiredFunds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The required investor funds percentage, for opening an account with external funding. If null, the investor funds are not enabled.")
  @JsonProperty(JSON_PROPERTY_REQUIRED_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRequiredFunds() {
    return requiredFunds;
  }


  public void setRequiredFunds(BigDecimal requiredFunds) {
    this.requiredFunds = requiredFunds;
  }


  public FundingSettings funderInterestCommissionAllocationType(FunderInterestCommissionAllocationTypeEnum funderInterestCommissionAllocationType) {
    
    this.funderInterestCommissionAllocationType = funderInterestCommissionAllocationType;
    return this;
  }

   /**
   * Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).
   * @return funderInterestCommissionAllocationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Define how the Interest is allocated to the investors(if the investors can define their own percentages for their own contribution to the loan, or if all of them are using the same percentage).")
  @JsonProperty(JSON_PROPERTY_FUNDER_INTEREST_COMMISSION_ALLOCATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FunderInterestCommissionAllocationTypeEnum getFunderInterestCommissionAllocationType() {
    return funderInterestCommissionAllocationType;
  }


  public void setFunderInterestCommissionAllocationType(FunderInterestCommissionAllocationTypeEnum funderInterestCommissionAllocationType) {
    this.funderInterestCommissionAllocationType = funderInterestCommissionAllocationType;
  }


  public FundingSettings enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the product has the investor funds enabled or not.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the product has the investor funds enabled or not.")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundingSettings fundingSettings = (FundingSettings) o;
    return Objects.equals(this.organizationInterestCommission, fundingSettings.organizationInterestCommission) &&
        Objects.equals(this.lockFundsAtApproval, fundingSettings.lockFundsAtApproval) &&
        Objects.equals(this.funderInterestCommission, fundingSettings.funderInterestCommission) &&
        Objects.equals(this.requiredFunds, fundingSettings.requiredFunds) &&
        Objects.equals(this.funderInterestCommissionAllocationType, fundingSettings.funderInterestCommissionAllocationType) &&
        Objects.equals(this.enabled, fundingSettings.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationInterestCommission, lockFundsAtApproval, funderInterestCommission, requiredFunds, funderInterestCommissionAllocationType, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundingSettings {\n");
    sb.append("    organizationInterestCommission: ").append(toIndentedString(organizationInterestCommission)).append("\n");
    sb.append("    lockFundsAtApproval: ").append(toIndentedString(lockFundsAtApproval)).append("\n");
    sb.append("    funderInterestCommission: ").append(toIndentedString(funderInterestCommission)).append("\n");
    sb.append("    requiredFunds: ").append(toIndentedString(requiredFunds)).append("\n");
    sb.append("    funderInterestCommissionAllocationType: ").append(toIndentedString(funderInterestCommissionAllocationType)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

