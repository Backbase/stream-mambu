/*
 * loans
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loans.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Adjustable amounts to be paid for Pay Off action
 */
@ApiModel(description = "Adjustable amounts to be paid for Pay Off action")
@JsonPropertyOrder({
  PayOffAdjustableAmounts.JSON_PROPERTY_FEES_PAID,
  PayOffAdjustableAmounts.JSON_PROPERTY_PENALTY_PAID,
  PayOffAdjustableAmounts.JSON_PROPERTY_INTEREST_PAID
})

public class PayOffAdjustableAmounts {
  public static final String JSON_PROPERTY_FEES_PAID = "feesPaid";
  private BigDecimal feesPaid;

  public static final String JSON_PROPERTY_PENALTY_PAID = "penaltyPaid";
  private BigDecimal penaltyPaid;

  public static final String JSON_PROPERTY_INTEREST_PAID = "interestPaid";
  private BigDecimal interestPaid;


  public PayOffAdjustableAmounts feesPaid(BigDecimal feesPaid) {
    
    this.feesPaid = feesPaid;
    return this;
  }

   /**
   * The fee amount to be paid for Pay Off action
   * @return feesPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fee amount to be paid for Pay Off action")
  @JsonProperty(JSON_PROPERTY_FEES_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFeesPaid() {
    return feesPaid;
  }


  public void setFeesPaid(BigDecimal feesPaid) {
    this.feesPaid = feesPaid;
  }


  public PayOffAdjustableAmounts penaltyPaid(BigDecimal penaltyPaid) {
    
    this.penaltyPaid = penaltyPaid;
    return this;
  }

   /**
   * The penalty amount to be paid for Pay Off action
   * @return penaltyPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The penalty amount to be paid for Pay Off action")
  @JsonProperty(JSON_PROPERTY_PENALTY_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPenaltyPaid() {
    return penaltyPaid;
  }


  public void setPenaltyPaid(BigDecimal penaltyPaid) {
    this.penaltyPaid = penaltyPaid;
  }


  public PayOffAdjustableAmounts interestPaid(BigDecimal interestPaid) {
    
    this.interestPaid = interestPaid;
    return this;
  }

   /**
   * The interest amount to be paid for Pay Off action
   * @return interestPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interest amount to be paid for Pay Off action")
  @JsonProperty(JSON_PROPERTY_INTEREST_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestPaid() {
    return interestPaid;
  }


  public void setInterestPaid(BigDecimal interestPaid) {
    this.interestPaid = interestPaid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayOffAdjustableAmounts payOffAdjustableAmounts = (PayOffAdjustableAmounts) o;
    return Objects.equals(this.feesPaid, payOffAdjustableAmounts.feesPaid) &&
        Objects.equals(this.penaltyPaid, payOffAdjustableAmounts.penaltyPaid) &&
        Objects.equals(this.interestPaid, payOffAdjustableAmounts.interestPaid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feesPaid, penaltyPaid, interestPaid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayOffAdjustableAmounts {\n");
    sb.append("    feesPaid: ").append(toIndentedString(feesPaid)).append("\n");
    sb.append("    penaltyPaid: ").append(toIndentedString(penaltyPaid)).append("\n");
    sb.append("    interestPaid: ").append(toIndentedString(interestPaid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

