/*
 * loans
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.loans.model;

import java.util.Objects;
import java.util.Arrays;
import com.backbase.mambu.loans.model.AccountArrearsSettings;
import com.backbase.mambu.loans.model.Asset;
import com.backbase.mambu.loans.model.Balances;
import com.backbase.mambu.loans.model.DisbursementDetails;
import com.backbase.mambu.loans.model.Guarantor;
import com.backbase.mambu.loans.model.InterestSettings;
import com.backbase.mambu.loans.model.InvestorFund;
import com.backbase.mambu.loans.model.LoanTranche;
import com.backbase.mambu.loans.model.PenaltySettings;
import com.backbase.mambu.loans.model.PrepaymentSettings;
import com.backbase.mambu.loans.model.PrincipalPaymentAccountSettings;
import com.backbase.mambu.loans.model.ScheduleSettings;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Represents the amount that your organization lends to a customer. An account associated to a borrower with terms and conditions defined by a loan product. In a loan account Mambu stores all the information related to disbursements, repayments, interest rates and withdrawals.
 */
@ApiModel(description = "Represents the amount that your organization lends to a customer. An account associated to a borrower with terms and conditions defined by a loan product. In a loan account Mambu stores all the information related to disbursements, repayments, interest rates and withdrawals.")
@JsonPropertyOrder({
  LoanAccount.JSON_PROPERTY_ACCOUNT_STATE,
  LoanAccount.JSON_PROPERTY_PREPAYMENT_SETTINGS,
  LoanAccount.JSON_PROPERTY_MIGRATION_EVENT_KEY,
  LoanAccount.JSON_PROPERTY_LAST_SET_TO_ARREARS_DATE,
  LoanAccount.JSON_PROPERTY_NOTES,
  LoanAccount.JSON_PROPERTY_DISBURSEMENT_DETAILS,
  LoanAccount.JSON_PROPERTY_DAYS_IN_ARREARS,
  LoanAccount.JSON_PROPERTY_ACCOUNT_SUB_STATE,
  LoanAccount.JSON_PROPERTY_LOAN_NAME,
  LoanAccount.JSON_PROPERTY_INTEREST_SETTINGS,
  LoanAccount.JSON_PROPERTY_ASSETS,
  LoanAccount.JSON_PROPERTY_LAST_INTEREST_REVIEW_DATE,
  LoanAccount.JSON_PROPERTY_ID,
  LoanAccount.JSON_PROPERTY_ASSIGNED_USER_KEY,
  LoanAccount.JSON_PROPERTY_FUTURE_PAYMENTS_ACCEPTANCE,
  LoanAccount.JSON_PROPERTY_ORIGINAL_ACCOUNT_KEY,
  LoanAccount.JSON_PROPERTY_LOCKED_OPERATIONS,
  LoanAccount.JSON_PROPERTY_ACCRUED_INTEREST,
  LoanAccount.JSON_PROPERTY_ACCRUED_PENALTY,
  LoanAccount.JSON_PROPERTY_CREATION_DATE,
  LoanAccount.JSON_PROPERTY_ASSIGNED_CENTRE_KEY,
  LoanAccount.JSON_PROPERTY_TRANCHES,
  LoanAccount.JSON_PROPERTY_APPROVED_DATE,
  LoanAccount.JSON_PROPERTY_TAX_RATE,
  LoanAccount.JSON_PROPERTY_LAST_TAX_RATE_REVIEW_DATE,
  LoanAccount.JSON_PROPERTY_INTEREST_FROM_ARREARS_ACCRUED,
  LoanAccount.JSON_PROPERTY_SCHEDULE_SETTINGS,
  LoanAccount.JSON_PROPERTY_DAYS_LATE,
  LoanAccount.JSON_PROPERTY_PAYMENT_METHOD,
  LoanAccount.JSON_PROPERTY_ACCOUNT_HOLDER_KEY,
  LoanAccount.JSON_PROPERTY_LATE_PAYMENTS_RECALCULATION_METHOD,
  LoanAccount.JSON_PROPERTY_FUNDING_SOURCES,
  LoanAccount.JSON_PROPERTY_ACCOUNT_HOLDER_TYPE,
  LoanAccount.JSON_PROPERTY_ARREARS_TOLERANCE_PERIOD,
  LoanAccount.JSON_PROPERTY_LAST_INTEREST_APPLIED_DATE,
  LoanAccount.JSON_PROPERTY_RESCHEDULED_ACCOUNT_KEY,
  LoanAccount.JSON_PROPERTY_ACTIVATION_TRANSACTION_KEY,
  LoanAccount.JSON_PROPERTY_ASSIGNED_BRANCH_KEY,
  LoanAccount.JSON_PROPERTY_BALANCES,
  LoanAccount.JSON_PROPERTY_CREDIT_ARRANGEMENT_KEY,
  LoanAccount.JSON_PROPERTY_INTEREST_COMMISSION,
  LoanAccount.JSON_PROPERTY_ENCODED_KEY,
  LoanAccount.JSON_PROPERTY_LAST_ACCOUNT_APPRAISAL_DATE,
  LoanAccount.JSON_PROPERTY_PENALTY_SETTINGS,
  LoanAccount.JSON_PROPERTY_SETTLEMENT_ACCOUNT_KEY,
  LoanAccount.JSON_PROPERTY_LAST_MODIFIED_DATE,
  LoanAccount.JSON_PROPERTY_PRINCIPAL_PAYMENT_SETTINGS,
  LoanAccount.JSON_PROPERTY_LAST_LOCKED_DATE,
  LoanAccount.JSON_PROPERTY_LOAN_AMOUNT,
  LoanAccount.JSON_PROPERTY_CLOSED_DATE,
  LoanAccount.JSON_PROPERTY_PRODUCT_TYPE_KEY,
  LoanAccount.JSON_PROPERTY_ALLOW_OFFSET,
  LoanAccount.JSON_PROPERTY_GUARANTORS,
  LoanAccount.JSON_PROPERTY_ACCOUNT_ARREARS_SETTINGS
})

public class LoanAccount {
  /**
   * The state of the loan account
   */
  public enum AccountStateEnum {
    PARTIAL_APPLICATION("PARTIAL_APPLICATION"),
    
    PENDING_APPROVAL("PENDING_APPROVAL"),
    
    APPROVED("APPROVED"),
    
    ACTIVE("ACTIVE"),
    
    ACTIVE_IN_ARREARS("ACTIVE_IN_ARREARS"),
    
    CLOSED("CLOSED");

    private String value;

    AccountStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountStateEnum fromValue(String value) {
      for (AccountStateEnum b : AccountStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNT_STATE = "accountState";
  private AccountStateEnum accountState;

  public static final String JSON_PROPERTY_PREPAYMENT_SETTINGS = "prepaymentSettings";
  private PrepaymentSettings prepaymentSettings;

  public static final String JSON_PROPERTY_MIGRATION_EVENT_KEY = "migrationEventKey";
  private String migrationEventKey;

  public static final String JSON_PROPERTY_LAST_SET_TO_ARREARS_DATE = "lastSetToArrearsDate";
  private OffsetDateTime lastSetToArrearsDate;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_DISBURSEMENT_DETAILS = "disbursementDetails";
  private DisbursementDetails disbursementDetails;

  public static final String JSON_PROPERTY_DAYS_IN_ARREARS = "daysInArrears";
  private Integer daysInArrears;

  /**
   * This field holds a second state for the account. Beside the account state, we might need to hold sometimes a different information to actually represent the correct life-cycle step in which the account is at that moment. The account behaves as the main state implies, but it  can have either some limitations either some extra behavior rules. For example, even if the account is Active, it can also be Locked in the same time which impliessome limitations over the actions which can be performed with the account.
   */
  public enum AccountSubStateEnum {
    PARTIALLY_DISBURSED("PARTIALLY_DISBURSED"),
    
    LOCKED("LOCKED"),
    
    LOCKED_CAPPING("LOCKED_CAPPING"),
    
    REFINANCED("REFINANCED"),
    
    RESCHEDULED("RESCHEDULED"),
    
    WITHDRAWN("WITHDRAWN"),
    
    REPAID("REPAID"),
    
    REJECTED("REJECTED"),
    
    WRITTEN_OFF("WRITTEN_OFF");

    private String value;

    AccountSubStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountSubStateEnum fromValue(String value) {
      for (AccountSubStateEnum b : AccountSubStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNT_SUB_STATE = "accountSubState";
  private AccountSubStateEnum accountSubState;

  public static final String JSON_PROPERTY_LOAN_NAME = "loanName";
  private String loanName;

  public static final String JSON_PROPERTY_INTEREST_SETTINGS = "interestSettings";
  private InterestSettings interestSettings;

  public static final String JSON_PROPERTY_ASSETS = "assets";
  private List<Asset> assets = null;

  public static final String JSON_PROPERTY_LAST_INTEREST_REVIEW_DATE = "lastInterestReviewDate";
  private OffsetDateTime lastInterestReviewDate;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ASSIGNED_USER_KEY = "assignedUserKey";
  private String assignedUserKey;

  /**
   * Shows whether the future payments are allowed or not for this account (repayment transactions with entry date set in the future)
   */
  public enum FuturePaymentsAcceptanceEnum {
    NO_FUTURE_PAYMENTS("NO_FUTURE_PAYMENTS"),
    
    ACCEPT_FUTURE_PAYMENTS("ACCEPT_FUTURE_PAYMENTS"),
    
    ACCEPT_OVERPAYMENTS("ACCEPT_OVERPAYMENTS");

    private String value;

    FuturePaymentsAcceptanceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FuturePaymentsAcceptanceEnum fromValue(String value) {
      for (FuturePaymentsAcceptanceEnum b : FuturePaymentsAcceptanceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FUTURE_PAYMENTS_ACCEPTANCE = "futurePaymentsAcceptance";
  private FuturePaymentsAcceptanceEnum futurePaymentsAcceptance;

  public static final String JSON_PROPERTY_ORIGINAL_ACCOUNT_KEY = "originalAccountKey";
  private String originalAccountKey;

  /**
   * Gets or Sets lockedOperations
   */
  public enum LockedOperationsEnum {
    INTEREST("APPLY_INTEREST"),
    
    FEES("APPLY_FEES"),
    
    PENALTIES("APPLY_PENALTIES");

    private String value;

    LockedOperationsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LockedOperationsEnum fromValue(String value) {
      for (LockedOperationsEnum b : LockedOperationsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LOCKED_OPERATIONS = "lockedOperations";
  private List<LockedOperationsEnum> lockedOperations = null;

  public static final String JSON_PROPERTY_ACCRUED_INTEREST = "accruedInterest";
  private BigDecimal accruedInterest;

  public static final String JSON_PROPERTY_ACCRUED_PENALTY = "accruedPenalty";
  private BigDecimal accruedPenalty;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_ASSIGNED_CENTRE_KEY = "assignedCentreKey";
  private String assignedCentreKey;

  public static final String JSON_PROPERTY_TRANCHES = "tranches";
  private List<LoanTranche> tranches = null;

  public static final String JSON_PROPERTY_APPROVED_DATE = "approvedDate";
  private OffsetDateTime approvedDate;

  public static final String JSON_PROPERTY_TAX_RATE = "taxRate";
  private BigDecimal taxRate;

  public static final String JSON_PROPERTY_LAST_TAX_RATE_REVIEW_DATE = "lastTaxRateReviewDate";
  private OffsetDateTime lastTaxRateReviewDate;

  public static final String JSON_PROPERTY_INTEREST_FROM_ARREARS_ACCRUED = "interestFromArrearsAccrued";
  private BigDecimal interestFromArrearsAccrued;

  public static final String JSON_PROPERTY_SCHEDULE_SETTINGS = "scheduleSettings";
  private ScheduleSettings scheduleSettings;

  public static final String JSON_PROPERTY_DAYS_LATE = "daysLate";
  private Integer daysLate;

  /**
   *  The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)
   */
  public enum PaymentMethodEnum {
    HORIZONTAL("HORIZONTAL"),
    
    VERTICAL("VERTICAL");

    private String value;

    PaymentMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentMethodEnum fromValue(String value) {
      for (PaymentMethodEnum b : PaymentMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
  private PaymentMethodEnum paymentMethod;

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_KEY = "accountHolderKey";
  private String accountHolderKey;

  /**
   * Overdue payments recalculation method copied from the loan product on which this account is based
   */
  public enum LatePaymentsRecalculationMethodEnum {
    OVERDUE_INSTALLMENTS_INCREASE("OVERDUE_INSTALLMENTS_INCREASE"),
    
    LAST_INSTALLMENT_INCREASE("LAST_INSTALLMENT_INCREASE");

    private String value;

    LatePaymentsRecalculationMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LatePaymentsRecalculationMethodEnum fromValue(String value) {
      for (LatePaymentsRecalculationMethodEnum b : LatePaymentsRecalculationMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LATE_PAYMENTS_RECALCULATION_METHOD = "latePaymentsRecalculationMethod";
  private LatePaymentsRecalculationMethodEnum latePaymentsRecalculationMethod;

  public static final String JSON_PROPERTY_FUNDING_SOURCES = "fundingSources";
  private List<InvestorFund> fundingSources = null;

  /**
   * The type of the account holder (i.e CLIENT)
   */
  public enum AccountHolderTypeEnum {
    CLIENT("CLIENT"),
    
    GROUP("GROUP");

    private String value;

    AccountHolderTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AccountHolderTypeEnum fromValue(String value) {
      for (AccountHolderTypeEnum b : AccountHolderTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ACCOUNT_HOLDER_TYPE = "accountHolderType";
  private AccountHolderTypeEnum accountHolderType;

  public static final String JSON_PROPERTY_ARREARS_TOLERANCE_PERIOD = "arrearsTolerancePeriod";
  private Integer arrearsTolerancePeriod;

  public static final String JSON_PROPERTY_LAST_INTEREST_APPLIED_DATE = "lastInterestAppliedDate";
  private OffsetDateTime lastInterestAppliedDate;

  public static final String JSON_PROPERTY_RESCHEDULED_ACCOUNT_KEY = "rescheduledAccountKey";
  private String rescheduledAccountKey;

  public static final String JSON_PROPERTY_ACTIVATION_TRANSACTION_KEY = "activationTransactionKey";
  private String activationTransactionKey;

  public static final String JSON_PROPERTY_ASSIGNED_BRANCH_KEY = "assignedBranchKey";
  private String assignedBranchKey;

  public static final String JSON_PROPERTY_BALANCES = "balances";
  private Balances balances;

  public static final String JSON_PROPERTY_CREDIT_ARRANGEMENT_KEY = "creditArrangementKey";
  private String creditArrangementKey;

  public static final String JSON_PROPERTY_INTEREST_COMMISSION = "interestCommission";
  private BigDecimal interestCommission;

  public static final String JSON_PROPERTY_ENCODED_KEY = "encodedKey";
  private String encodedKey;

  public static final String JSON_PROPERTY_LAST_ACCOUNT_APPRAISAL_DATE = "lastAccountAppraisalDate";
  private OffsetDateTime lastAccountAppraisalDate;

  public static final String JSON_PROPERTY_PENALTY_SETTINGS = "penaltySettings";
  private PenaltySettings penaltySettings;

  public static final String JSON_PROPERTY_SETTLEMENT_ACCOUNT_KEY = "settlementAccountKey";
  private String settlementAccountKey;

  public static final String JSON_PROPERTY_LAST_MODIFIED_DATE = "lastModifiedDate";
  private OffsetDateTime lastModifiedDate;

  public static final String JSON_PROPERTY_PRINCIPAL_PAYMENT_SETTINGS = "principalPaymentSettings";
  private PrincipalPaymentAccountSettings principalPaymentSettings;

  public static final String JSON_PROPERTY_LAST_LOCKED_DATE = "lastLockedDate";
  private OffsetDateTime lastLockedDate;

  public static final String JSON_PROPERTY_LOAN_AMOUNT = "loanAmount";
  private BigDecimal loanAmount;

  public static final String JSON_PROPERTY_CLOSED_DATE = "closedDate";
  private OffsetDateTime closedDate;

  public static final String JSON_PROPERTY_PRODUCT_TYPE_KEY = "productTypeKey";
  private String productTypeKey;

  public static final String JSON_PROPERTY_ALLOW_OFFSET = "allowOffset";
  private Boolean allowOffset;

  public static final String JSON_PROPERTY_GUARANTORS = "guarantors";
  private List<Guarantor> guarantors = null;

  public static final String JSON_PROPERTY_ACCOUNT_ARREARS_SETTINGS = "accountArrearsSettings";
  private AccountArrearsSettings accountArrearsSettings;


  public LoanAccount accountState(AccountStateEnum accountState) {
    
    this.accountState = accountState;
    return this;
  }

   /**
   * The state of the loan account
   * @return accountState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state of the loan account")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountStateEnum getAccountState() {
    return accountState;
  }


  public void setAccountState(AccountStateEnum accountState) {
    this.accountState = accountState;
  }


  public LoanAccount prepaymentSettings(PrepaymentSettings prepaymentSettings) {
    
    this.prepaymentSettings = prepaymentSettings;
    return this;
  }

   /**
   * Get prepaymentSettings
   * @return prepaymentSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREPAYMENT_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrepaymentSettings getPrepaymentSettings() {
    return prepaymentSettings;
  }


  public void setPrepaymentSettings(PrepaymentSettings prepaymentSettings) {
    this.prepaymentSettings = prepaymentSettings;
  }


  public LoanAccount migrationEventKey(String migrationEventKey) {
    
    this.migrationEventKey = migrationEventKey;
    return this;
  }

   /**
   * The migration event encoded key associated with this loan account. If this account was imported, track which &#39;migration event&#39; they came from.
   * @return migrationEventKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The migration event encoded key associated with this loan account. If this account was imported, track which 'migration event' they came from.")
  @JsonProperty(JSON_PROPERTY_MIGRATION_EVENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMigrationEventKey() {
    return migrationEventKey;
  }


  public void setMigrationEventKey(String migrationEventKey) {
    this.migrationEventKey = migrationEventKey;
  }


  public LoanAccount lastSetToArrearsDate(OffsetDateTime lastSetToArrearsDate) {
    
    this.lastSetToArrearsDate = lastSetToArrearsDate;
    return this;
  }

   /**
   * Date when the loan account was set to last standing, or null if never set (as Organization Time)
   * @return lastSetToArrearsDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "Date when the loan account was set to last standing, or null if never set (as Organization Time)")
  @JsonProperty(JSON_PROPERTY_LAST_SET_TO_ARREARS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastSetToArrearsDate() {
    return lastSetToArrearsDate;
  }


  public void setLastSetToArrearsDate(OffsetDateTime lastSetToArrearsDate) {
    this.lastSetToArrearsDate = lastSetToArrearsDate;
  }


  public LoanAccount notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Extra notes about this loan account.
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Extra notes about this loan account.")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    this.notes = notes;
  }


  public LoanAccount disbursementDetails(DisbursementDetails disbursementDetails) {
    
    this.disbursementDetails = disbursementDetails;
    return this;
  }

   /**
   * Get disbursementDetails
   * @return disbursementDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISBURSEMENT_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DisbursementDetails getDisbursementDetails() {
    return disbursementDetails;
  }


  public void setDisbursementDetails(DisbursementDetails disbursementDetails) {
    this.disbursementDetails = disbursementDetails;
  }


   /**
   * The number of days in arrears
   * @return daysInArrears
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days in arrears")
  @JsonProperty(JSON_PROPERTY_DAYS_IN_ARREARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDaysInArrears() {
    return daysInArrears;
  }




  public LoanAccount accountSubState(AccountSubStateEnum accountSubState) {
    
    this.accountSubState = accountSubState;
    return this;
  }

   /**
   * This field holds a second state for the account. Beside the account state, we might need to hold sometimes a different information to actually represent the correct life-cycle step in which the account is at that moment. The account behaves as the main state implies, but it  can have either some limitations either some extra behavior rules. For example, even if the account is Active, it can also be Locked in the same time which impliessome limitations over the actions which can be performed with the account.
   * @return accountSubState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This field holds a second state for the account. Beside the account state, we might need to hold sometimes a different information to actually represent the correct life-cycle step in which the account is at that moment. The account behaves as the main state implies, but it  can have either some limitations either some extra behavior rules. For example, even if the account is Active, it can also be Locked in the same time which impliessome limitations over the actions which can be performed with the account.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_SUB_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountSubStateEnum getAccountSubState() {
    return accountSubState;
  }


  public void setAccountSubState(AccountSubStateEnum accountSubState) {
    this.accountSubState = accountSubState;
  }


  public LoanAccount loanName(String loanName) {
    
    this.loanName = loanName;
    return this;
  }

   /**
   * The name of the loan account.
   * @return loanName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the loan account.")
  @JsonProperty(JSON_PROPERTY_LOAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoanName() {
    return loanName;
  }


  public void setLoanName(String loanName) {
    this.loanName = loanName;
  }


  public LoanAccount interestSettings(InterestSettings interestSettings) {
    
    this.interestSettings = interestSettings;
    return this;
  }

   /**
   * Get interestSettings
   * @return interestSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTEREST_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InterestSettings getInterestSettings() {
    return interestSettings;
  }


  public void setInterestSettings(InterestSettings interestSettings) {
    this.interestSettings = interestSettings;
  }


  public LoanAccount assets(List<Asset> assets) {
    
    this.assets = assets;
    return this;
  }

  public LoanAccount addAssetsItem(Asset assetsItem) {
    if (this.assets == null) {
      this.assets = new ArrayList<>();
    }
    this.assets.add(assetsItem);
    return this;
  }

   /**
   * A list of assets associated with the current loan account
   * @return assets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of assets associated with the current loan account")
  @JsonProperty(JSON_PROPERTY_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Asset> getAssets() {
    return assets;
  }


  public void setAssets(List<Asset> assets) {
    this.assets = assets;
  }


  public LoanAccount lastInterestReviewDate(OffsetDateTime lastInterestReviewDate) {
    
    this.lastInterestReviewDate = lastInterestReviewDate;
    return this;
  }

   /**
   * The last interest review date. Indicates the date the interest was reviewed last time. Stored as Organization Time.
   * @return lastInterestReviewDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The last interest review date. Indicates the date the interest was reviewed last time. Stored as Organization Time.")
  @JsonProperty(JSON_PROPERTY_LAST_INTEREST_REVIEW_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastInterestReviewDate() {
    return lastInterestReviewDate;
  }


  public void setLastInterestReviewDate(OffsetDateTime lastInterestReviewDate) {
    this.lastInterestReviewDate = lastInterestReviewDate;
  }


  public LoanAccount id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the loan, can be generated and customized, unique
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the loan, can be generated and customized, unique")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public LoanAccount assignedUserKey(String assignedUserKey) {
    
    this.assignedUserKey = assignedUserKey;
    return this;
  }

   /**
   * Key of the user this loan is assigned to
   * @return assignedUserKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key of the user this loan is assigned to")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_USER_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedUserKey() {
    return assignedUserKey;
  }


  public void setAssignedUserKey(String assignedUserKey) {
    this.assignedUserKey = assignedUserKey;
  }


  public LoanAccount futurePaymentsAcceptance(FuturePaymentsAcceptanceEnum futurePaymentsAcceptance) {
    
    this.futurePaymentsAcceptance = futurePaymentsAcceptance;
    return this;
  }

   /**
   * Shows whether the future payments are allowed or not for this account (repayment transactions with entry date set in the future)
   * @return futurePaymentsAcceptance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows whether the future payments are allowed or not for this account (repayment transactions with entry date set in the future)")
  @JsonProperty(JSON_PROPERTY_FUTURE_PAYMENTS_ACCEPTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FuturePaymentsAcceptanceEnum getFuturePaymentsAcceptance() {
    return futurePaymentsAcceptance;
  }


  public void setFuturePaymentsAcceptance(FuturePaymentsAcceptanceEnum futurePaymentsAcceptance) {
    this.futurePaymentsAcceptance = futurePaymentsAcceptance;
  }


  public LoanAccount originalAccountKey(String originalAccountKey) {
    
    this.originalAccountKey = originalAccountKey;
    return this;
  }

   /**
   * Key of the original rescheduled/refinanced account
   * @return originalAccountKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key of the original rescheduled/refinanced account")
  @JsonProperty(JSON_PROPERTY_ORIGINAL_ACCOUNT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOriginalAccountKey() {
    return originalAccountKey;
  }


  public void setOriginalAccountKey(String originalAccountKey) {
    this.originalAccountKey = originalAccountKey;
  }


  public LoanAccount lockedOperations(List<LockedOperationsEnum> lockedOperations) {
    
    this.lockedOperations = lockedOperations;
    return this;
  }

  public LoanAccount addLockedOperationsItem(LockedOperationsEnum lockedOperationsItem) {
    if (this.lockedOperations == null) {
      this.lockedOperations = new ArrayList<>();
    }
    this.lockedOperations.add(lockedOperationsItem);
    return this;
  }

   /**
   * A list with operations which are locked when the account is in sub-state AccountState.LOCKED.
   * @return lockedOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list with operations which are locked when the account is in sub-state AccountState.LOCKED.")
  @JsonProperty(JSON_PROPERTY_LOCKED_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LockedOperationsEnum> getLockedOperations() {
    return lockedOperations;
  }


  public void setLockedOperations(List<LockedOperationsEnum> lockedOperations) {
    this.lockedOperations = lockedOperations;
  }


  public LoanAccount accruedInterest(BigDecimal accruedInterest) {
    
    this.accruedInterest = accruedInterest;
    return this;
  }

   /**
   * The accrued interest. Represents the amount of interest that has been accrued in the account.
   * @return accruedInterest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The accrued interest. Represents the amount of interest that has been accrued in the account.")
  @JsonProperty(JSON_PROPERTY_ACCRUED_INTEREST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAccruedInterest() {
    return accruedInterest;
  }


  public void setAccruedInterest(BigDecimal accruedInterest) {
    this.accruedInterest = accruedInterest;
  }


  public LoanAccount accruedPenalty(BigDecimal accruedPenalty) {
    
    this.accruedPenalty = accruedPenalty;
    return this;
  }

   /**
   * The accrued penalty, represents the amount of penalty that has been accrued in the account.
   * @return accruedPenalty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The accrued penalty, represents the amount of penalty that has been accrued in the account.")
  @JsonProperty(JSON_PROPERTY_ACCRUED_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAccruedPenalty() {
    return accruedPenalty;
  }


  public void setAccruedPenalty(BigDecimal accruedPenalty) {
    this.accruedPenalty = accruedPenalty;
  }


  public LoanAccount creationDate(OffsetDateTime creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

   /**
   * The date this loan account was created
   * @return creationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date this loan account was created")
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public LoanAccount assignedCentreKey(String assignedCentreKey) {
    
    this.assignedCentreKey = assignedCentreKey;
    return this;
  }

   /**
   * Key of the centre this account is assigned to
   * @return assignedCentreKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key of the centre this account is assigned to")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_CENTRE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedCentreKey() {
    return assignedCentreKey;
  }


  public void setAssignedCentreKey(String assignedCentreKey) {
    this.assignedCentreKey = assignedCentreKey;
  }


  public LoanAccount tranches(List<LoanTranche> tranches) {
    
    this.tranches = tranches;
    return this;
  }

  public LoanAccount addTranchesItem(LoanTranche tranchesItem) {
    if (this.tranches == null) {
      this.tranches = new ArrayList<>();
    }
    this.tranches.add(tranchesItem);
    return this;
  }

   /**
   * A list of disbursement tranches available for the current loan account.
   * @return tranches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of disbursement tranches available for the current loan account.")
  @JsonProperty(JSON_PROPERTY_TRANCHES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LoanTranche> getTranches() {
    return tranches;
  }


  public void setTranches(List<LoanTranche> tranches) {
    this.tranches = tranches;
  }


  public LoanAccount approvedDate(OffsetDateTime approvedDate) {
    
    this.approvedDate = approvedDate;
    return this;
  }

   /**
   * The date this loan account was approved
   * @return approvedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date this loan account was approved")
  @JsonProperty(JSON_PROPERTY_APPROVED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getApprovedDate() {
    return approvedDate;
  }


  public void setApprovedDate(OffsetDateTime approvedDate) {
    this.approvedDate = approvedDate;
  }


  public LoanAccount taxRate(BigDecimal taxRate) {
    
    this.taxRate = taxRate;
    return this;
  }

   /**
   * The tax rate.
   * @return taxRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax rate.")
  @JsonProperty(JSON_PROPERTY_TAX_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTaxRate() {
    return taxRate;
  }


  public void setTaxRate(BigDecimal taxRate) {
    this.taxRate = taxRate;
  }


  public LoanAccount lastTaxRateReviewDate(OffsetDateTime lastTaxRateReviewDate) {
    
    this.lastTaxRateReviewDate = lastTaxRateReviewDate;
    return this;
  }

   /**
   * The last tax rate review date. Indicates When/if the account had last tax rate checked (as Organization Time).
   * @return lastTaxRateReviewDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The last tax rate review date. Indicates When/if the account had last tax rate checked (as Organization Time).")
  @JsonProperty(JSON_PROPERTY_LAST_TAX_RATE_REVIEW_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastTaxRateReviewDate() {
    return lastTaxRateReviewDate;
  }


  public void setLastTaxRateReviewDate(OffsetDateTime lastTaxRateReviewDate) {
    this.lastTaxRateReviewDate = lastTaxRateReviewDate;
  }


   /**
   * The interest from arrears accrued. Represents the amount of interest from arrears that has been accrued in the account.
   * @return interestFromArrearsAccrued
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The interest from arrears accrued. Represents the amount of interest from arrears that has been accrued in the account.")
  @JsonProperty(JSON_PROPERTY_INTEREST_FROM_ARREARS_ACCRUED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestFromArrearsAccrued() {
    return interestFromArrearsAccrued;
  }




  public LoanAccount scheduleSettings(ScheduleSettings scheduleSettings) {
    
    this.scheduleSettings = scheduleSettings;
    return this;
  }

   /**
   * Get scheduleSettings
   * @return scheduleSettings
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ScheduleSettings getScheduleSettings() {
    return scheduleSettings;
  }


  public void setScheduleSettings(ScheduleSettings scheduleSettings) {
    this.scheduleSettings = scheduleSettings;
  }


   /**
   * The number of days late
   * @return daysLate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days late")
  @JsonProperty(JSON_PROPERTY_DAYS_LATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDaysLate() {
    return daysLate;
  }




  public LoanAccount paymentMethod(PaymentMethodEnum paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   *  The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " The payment method. Represents the interest payment method that determines whether the payments are made Horizontally (on the Repayments) or Vertically (on the Loan Account)")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentMethodEnum getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public LoanAccount accountHolderKey(String accountHolderKey) {
    
    this.accountHolderKey = accountHolderKey;
    return this;
  }

   /**
   * The encodedKey of the client (a.k.a account holder)
   * @return accountHolderKey
  **/
  @ApiModelProperty(required = true, value = "The encodedKey of the client (a.k.a account holder)")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountHolderKey() {
    return accountHolderKey;
  }


  public void setAccountHolderKey(String accountHolderKey) {
    this.accountHolderKey = accountHolderKey;
  }


  public LoanAccount latePaymentsRecalculationMethod(LatePaymentsRecalculationMethodEnum latePaymentsRecalculationMethod) {
    
    this.latePaymentsRecalculationMethod = latePaymentsRecalculationMethod;
    return this;
  }

   /**
   * Overdue payments recalculation method copied from the loan product on which this account is based
   * @return latePaymentsRecalculationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Overdue payments recalculation method copied from the loan product on which this account is based")
  @JsonProperty(JSON_PROPERTY_LATE_PAYMENTS_RECALCULATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LatePaymentsRecalculationMethodEnum getLatePaymentsRecalculationMethod() {
    return latePaymentsRecalculationMethod;
  }


  public void setLatePaymentsRecalculationMethod(LatePaymentsRecalculationMethodEnum latePaymentsRecalculationMethod) {
    this.latePaymentsRecalculationMethod = latePaymentsRecalculationMethod;
  }


  public LoanAccount fundingSources(List<InvestorFund> fundingSources) {
    
    this.fundingSources = fundingSources;
    return this;
  }

  public LoanAccount addFundingSourcesItem(InvestorFund fundingSourcesItem) {
    if (this.fundingSources == null) {
      this.fundingSources = new ArrayList<>();
    }
    this.fundingSources.add(fundingSourcesItem);
    return this;
  }

   /**
   * A list of funds associated with the current loan account
   * @return fundingSources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of funds associated with the current loan account")
  @JsonProperty(JSON_PROPERTY_FUNDING_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InvestorFund> getFundingSources() {
    return fundingSources;
  }


  public void setFundingSources(List<InvestorFund> fundingSources) {
    this.fundingSources = fundingSources;
  }


  public LoanAccount accountHolderType(AccountHolderTypeEnum accountHolderType) {
    
    this.accountHolderType = accountHolderType;
    return this;
  }

   /**
   * The type of the account holder (i.e CLIENT)
   * @return accountHolderType
  **/
  @ApiModelProperty(required = true, value = "The type of the account holder (i.e CLIENT)")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountHolderTypeEnum getAccountHolderType() {
    return accountHolderType;
  }


  public void setAccountHolderType(AccountHolderTypeEnum accountHolderType) {
    this.accountHolderType = accountHolderType;
  }


  public LoanAccount arrearsTolerancePeriod(Integer arrearsTolerancePeriod) {
    
    this.arrearsTolerancePeriod = arrearsTolerancePeriod;
    return this;
  }

   /**
   * The arrears tolerance (period or day of month) depending on the product settings
   * @return arrearsTolerancePeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The arrears tolerance (period or day of month) depending on the product settings")
  @JsonProperty(JSON_PROPERTY_ARREARS_TOLERANCE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getArrearsTolerancePeriod() {
    return arrearsTolerancePeriod;
  }


  public void setArrearsTolerancePeriod(Integer arrearsTolerancePeriod) {
    this.arrearsTolerancePeriod = arrearsTolerancePeriod;
  }


  public LoanAccount lastInterestAppliedDate(OffsetDateTime lastInterestAppliedDate) {
    
    this.lastInterestAppliedDate = lastInterestAppliedDate;
    return this;
  }

   /**
   * The last interest applied date. Indicates when/if the account had last interest applied (stored to interest balance) (as Organization Time)
   * @return lastInterestAppliedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The last interest applied date. Indicates when/if the account had last interest applied (stored to interest balance) (as Organization Time)")
  @JsonProperty(JSON_PROPERTY_LAST_INTEREST_APPLIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastInterestAppliedDate() {
    return lastInterestAppliedDate;
  }


  public void setLastInterestAppliedDate(OffsetDateTime lastInterestAppliedDate) {
    this.lastInterestAppliedDate = lastInterestAppliedDate;
  }


  public LoanAccount rescheduledAccountKey(String rescheduledAccountKey) {
    
    this.rescheduledAccountKey = rescheduledAccountKey;
    return this;
  }

   /**
   * Key pointing to where this account was rescheduled/refinanced to. only not null if rescheduled
   * @return rescheduledAccountKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key pointing to where this account was rescheduled/refinanced to. only not null if rescheduled")
  @JsonProperty(JSON_PROPERTY_RESCHEDULED_ACCOUNT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRescheduledAccountKey() {
    return rescheduledAccountKey;
  }


  public void setRescheduledAccountKey(String rescheduledAccountKey) {
    this.rescheduledAccountKey = rescheduledAccountKey;
  }


  public LoanAccount activationTransactionKey(String activationTransactionKey) {
    
    this.activationTransactionKey = activationTransactionKey;
    return this;
  }

   /**
   * The encoded key of the transaction that activated this account
   * @return activationTransactionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encoded key of the transaction that activated this account")
  @JsonProperty(JSON_PROPERTY_ACTIVATION_TRANSACTION_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActivationTransactionKey() {
    return activationTransactionKey;
  }


  public void setActivationTransactionKey(String activationTransactionKey) {
    this.activationTransactionKey = activationTransactionKey;
  }


  public LoanAccount assignedBranchKey(String assignedBranchKey) {
    
    this.assignedBranchKey = assignedBranchKey;
    return this;
  }

   /**
   * Key of the branch this loan account is assigned to. Loan account&#39;s branch is set to unassigned if no branch field is set
   * @return assignedBranchKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key of the branch this loan account is assigned to. Loan account's branch is set to unassigned if no branch field is set")
  @JsonProperty(JSON_PROPERTY_ASSIGNED_BRANCH_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssignedBranchKey() {
    return assignedBranchKey;
  }


  public void setAssignedBranchKey(String assignedBranchKey) {
    this.assignedBranchKey = assignedBranchKey;
  }


  public LoanAccount balances(Balances balances) {
    
    this.balances = balances;
    return this;
  }

   /**
   * Get balances
   * @return balances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BALANCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Balances getBalances() {
    return balances;
  }


  public void setBalances(Balances balances) {
    this.balances = balances;
  }


  public LoanAccount creditArrangementKey(String creditArrangementKey) {
    
    this.creditArrangementKey = creditArrangementKey;
    return this;
  }

   /**
   * The key to the line of credit where this account is registered to.
   * @return creditArrangementKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The key to the line of credit where this account is registered to.")
  @JsonProperty(JSON_PROPERTY_CREDIT_ARRANGEMENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreditArrangementKey() {
    return creditArrangementKey;
  }


  public void setCreditArrangementKey(String creditArrangementKey) {
    this.creditArrangementKey = creditArrangementKey;
  }


  public LoanAccount interestCommission(BigDecimal interestCommission) {
    
    this.interestCommission = interestCommission;
    return this;
  }

   /**
   * The value of the interest booked by the organization from the accounts funded by investors. Null if the funds are not enable
   * @return interestCommission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value of the interest booked by the organization from the accounts funded by investors. Null if the funds are not enable")
  @JsonProperty(JSON_PROPERTY_INTEREST_COMMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestCommission() {
    return interestCommission;
  }


  public void setInterestCommission(BigDecimal interestCommission) {
    this.interestCommission = interestCommission;
  }


   /**
   * The encoded key of the loan account, auto generated, unique
   * @return encodedKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encoded key of the loan account, auto generated, unique")
  @JsonProperty(JSON_PROPERTY_ENCODED_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEncodedKey() {
    return encodedKey;
  }




  public LoanAccount lastAccountAppraisalDate(OffsetDateTime lastAccountAppraisalDate) {
    
    this.lastAccountAppraisalDate = lastAccountAppraisalDate;
    return this;
  }

   /**
   * When/if the account had last been evaluated for interest, principal, fees and penalties calculations (as Organization Time)
   * @return lastAccountAppraisalDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "When/if the account had last been evaluated for interest, principal, fees and penalties calculations (as Organization Time)")
  @JsonProperty(JSON_PROPERTY_LAST_ACCOUNT_APPRAISAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastAccountAppraisalDate() {
    return lastAccountAppraisalDate;
  }


  public void setLastAccountAppraisalDate(OffsetDateTime lastAccountAppraisalDate) {
    this.lastAccountAppraisalDate = lastAccountAppraisalDate;
  }


  public LoanAccount penaltySettings(PenaltySettings penaltySettings) {
    
    this.penaltySettings = penaltySettings;
    return this;
  }

   /**
   * Get penaltySettings
   * @return penaltySettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PENALTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PenaltySettings getPenaltySettings() {
    return penaltySettings;
  }


  public void setPenaltySettings(PenaltySettings penaltySettings) {
    this.penaltySettings = penaltySettings;
  }


  public LoanAccount settlementAccountKey(String settlementAccountKey) {
    
    this.settlementAccountKey = settlementAccountKey;
    return this;
  }

   /**
   * The encodedKey of the settlement account
   * @return settlementAccountKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The encodedKey of the settlement account")
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_ACCOUNT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSettlementAccountKey() {
    return settlementAccountKey;
  }


  public void setSettlementAccountKey(String settlementAccountKey) {
    this.settlementAccountKey = settlementAccountKey;
  }


  public LoanAccount lastModifiedDate(OffsetDateTime lastModifiedDate) {
    
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

   /**
   * The last date the loan was updated
   * @return lastModifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The last date the loan was updated")
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastModifiedDate() {
    return lastModifiedDate;
  }


  public void setLastModifiedDate(OffsetDateTime lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public LoanAccount principalPaymentSettings(PrincipalPaymentAccountSettings principalPaymentSettings) {
    
    this.principalPaymentSettings = principalPaymentSettings;
    return this;
  }

   /**
   * Get principalPaymentSettings
   * @return principalPaymentSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRINCIPAL_PAYMENT_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrincipalPaymentAccountSettings getPrincipalPaymentSettings() {
    return principalPaymentSettings;
  }


  public void setPrincipalPaymentSettings(PrincipalPaymentAccountSettings principalPaymentSettings) {
    this.principalPaymentSettings = principalPaymentSettings;
  }


  public LoanAccount lastLockedDate(OffsetDateTime lastLockedDate) {
    
    this.lastLockedDate = lastLockedDate;
    return this;
  }

   /**
   * Holds the date when the account was set for the last time in the LOCKED state. If null, the account is not locked anymore. Stored as Organization Time
   * @return lastLockedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "Holds the date when the account was set for the last time in the LOCKED state. If null, the account is not locked anymore. Stored as Organization Time")
  @JsonProperty(JSON_PROPERTY_LAST_LOCKED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastLockedDate() {
    return lastLockedDate;
  }


  public void setLastLockedDate(OffsetDateTime lastLockedDate) {
    this.lastLockedDate = lastLockedDate;
  }


  public LoanAccount loanAmount(BigDecimal loanAmount) {
    
    this.loanAmount = loanAmount;
    return this;
  }

   /**
   * The loan amount
   * @return loanAmount
  **/
  @ApiModelProperty(required = true, value = "The loan amount")
  @JsonProperty(JSON_PROPERTY_LOAN_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getLoanAmount() {
    return loanAmount;
  }


  public void setLoanAmount(BigDecimal loanAmount) {
    this.loanAmount = loanAmount;
  }


  public LoanAccount closedDate(OffsetDateTime closedDate) {
    
    this.closedDate = closedDate;
    return this;
  }

   /**
   * The date this loan was closed
   * @return closedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-09-06T13:37:50+03:00", value = "The date this loan was closed")
  @JsonProperty(JSON_PROPERTY_CLOSED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getClosedDate() {
    return closedDate;
  }


  public void setClosedDate(OffsetDateTime closedDate) {
    this.closedDate = closedDate;
  }


  public LoanAccount productTypeKey(String productTypeKey) {
    
    this.productTypeKey = productTypeKey;
    return this;
  }

   /**
   * The key to the type of product that this account is based on.
   * @return productTypeKey
  **/
  @ApiModelProperty(required = true, value = "The key to the type of product that this account is based on.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProductTypeKey() {
    return productTypeKey;
  }


  public void setProductTypeKey(String productTypeKey) {
    this.productTypeKey = productTypeKey;
  }


  public LoanAccount allowOffset(Boolean allowOffset) {
    
    this.allowOffset = allowOffset;
    return this;
  }

   /**
   * Specify if the account is allowing offset links.
   * @return allowOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify if the account is allowing offset links.")
  @JsonProperty(JSON_PROPERTY_ALLOW_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowOffset() {
    return allowOffset;
  }


  public void setAllowOffset(Boolean allowOffset) {
    this.allowOffset = allowOffset;
  }


  public LoanAccount guarantors(List<Guarantor> guarantors) {
    
    this.guarantors = guarantors;
    return this;
  }

  public LoanAccount addGuarantorsItem(Guarantor guarantorsItem) {
    if (this.guarantors == null) {
      this.guarantors = new ArrayList<>();
    }
    this.guarantors.add(guarantorsItem);
    return this;
  }

   /**
   * A list of guarantees associated with the current loan account
   * @return guarantors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of guarantees associated with the current loan account")
  @JsonProperty(JSON_PROPERTY_GUARANTORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Guarantor> getGuarantors() {
    return guarantors;
  }


  public void setGuarantors(List<Guarantor> guarantors) {
    this.guarantors = guarantors;
  }


  public LoanAccount accountArrearsSettings(AccountArrearsSettings accountArrearsSettings) {
    
    this.accountArrearsSettings = accountArrearsSettings;
    return this;
  }

   /**
   * Get accountArrearsSettings
   * @return accountArrearsSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ARREARS_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AccountArrearsSettings getAccountArrearsSettings() {
    return accountArrearsSettings;
  }


  public void setAccountArrearsSettings(AccountArrearsSettings accountArrearsSettings) {
    this.accountArrearsSettings = accountArrearsSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanAccount loanAccount = (LoanAccount) o;
    return Objects.equals(this.accountState, loanAccount.accountState) &&
        Objects.equals(this.prepaymentSettings, loanAccount.prepaymentSettings) &&
        Objects.equals(this.migrationEventKey, loanAccount.migrationEventKey) &&
        Objects.equals(this.lastSetToArrearsDate, loanAccount.lastSetToArrearsDate) &&
        Objects.equals(this.notes, loanAccount.notes) &&
        Objects.equals(this.disbursementDetails, loanAccount.disbursementDetails) &&
        Objects.equals(this.daysInArrears, loanAccount.daysInArrears) &&
        Objects.equals(this.accountSubState, loanAccount.accountSubState) &&
        Objects.equals(this.loanName, loanAccount.loanName) &&
        Objects.equals(this.interestSettings, loanAccount.interestSettings) &&
        Objects.equals(this.assets, loanAccount.assets) &&
        Objects.equals(this.lastInterestReviewDate, loanAccount.lastInterestReviewDate) &&
        Objects.equals(this.id, loanAccount.id) &&
        Objects.equals(this.assignedUserKey, loanAccount.assignedUserKey) &&
        Objects.equals(this.futurePaymentsAcceptance, loanAccount.futurePaymentsAcceptance) &&
        Objects.equals(this.originalAccountKey, loanAccount.originalAccountKey) &&
        Objects.equals(this.lockedOperations, loanAccount.lockedOperations) &&
        Objects.equals(this.accruedInterest, loanAccount.accruedInterest) &&
        Objects.equals(this.accruedPenalty, loanAccount.accruedPenalty) &&
        Objects.equals(this.creationDate, loanAccount.creationDate) &&
        Objects.equals(this.assignedCentreKey, loanAccount.assignedCentreKey) &&
        Objects.equals(this.tranches, loanAccount.tranches) &&
        Objects.equals(this.approvedDate, loanAccount.approvedDate) &&
        Objects.equals(this.taxRate, loanAccount.taxRate) &&
        Objects.equals(this.lastTaxRateReviewDate, loanAccount.lastTaxRateReviewDate) &&
        Objects.equals(this.interestFromArrearsAccrued, loanAccount.interestFromArrearsAccrued) &&
        Objects.equals(this.scheduleSettings, loanAccount.scheduleSettings) &&
        Objects.equals(this.daysLate, loanAccount.daysLate) &&
        Objects.equals(this.paymentMethod, loanAccount.paymentMethod) &&
        Objects.equals(this.accountHolderKey, loanAccount.accountHolderKey) &&
        Objects.equals(this.latePaymentsRecalculationMethod, loanAccount.latePaymentsRecalculationMethod) &&
        Objects.equals(this.fundingSources, loanAccount.fundingSources) &&
        Objects.equals(this.accountHolderType, loanAccount.accountHolderType) &&
        Objects.equals(this.arrearsTolerancePeriod, loanAccount.arrearsTolerancePeriod) &&
        Objects.equals(this.lastInterestAppliedDate, loanAccount.lastInterestAppliedDate) &&
        Objects.equals(this.rescheduledAccountKey, loanAccount.rescheduledAccountKey) &&
        Objects.equals(this.activationTransactionKey, loanAccount.activationTransactionKey) &&
        Objects.equals(this.assignedBranchKey, loanAccount.assignedBranchKey) &&
        Objects.equals(this.balances, loanAccount.balances) &&
        Objects.equals(this.creditArrangementKey, loanAccount.creditArrangementKey) &&
        Objects.equals(this.interestCommission, loanAccount.interestCommission) &&
        Objects.equals(this.encodedKey, loanAccount.encodedKey) &&
        Objects.equals(this.lastAccountAppraisalDate, loanAccount.lastAccountAppraisalDate) &&
        Objects.equals(this.penaltySettings, loanAccount.penaltySettings) &&
        Objects.equals(this.settlementAccountKey, loanAccount.settlementAccountKey) &&
        Objects.equals(this.lastModifiedDate, loanAccount.lastModifiedDate) &&
        Objects.equals(this.principalPaymentSettings, loanAccount.principalPaymentSettings) &&
        Objects.equals(this.lastLockedDate, loanAccount.lastLockedDate) &&
        Objects.equals(this.loanAmount, loanAccount.loanAmount) &&
        Objects.equals(this.closedDate, loanAccount.closedDate) &&
        Objects.equals(this.productTypeKey, loanAccount.productTypeKey) &&
        Objects.equals(this.allowOffset, loanAccount.allowOffset) &&
        Objects.equals(this.guarantors, loanAccount.guarantors) &&
        Objects.equals(this.accountArrearsSettings, loanAccount.accountArrearsSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountState, prepaymentSettings, migrationEventKey, lastSetToArrearsDate, notes, disbursementDetails, daysInArrears, accountSubState, loanName, interestSettings, assets, lastInterestReviewDate, id, assignedUserKey, futurePaymentsAcceptance, originalAccountKey, lockedOperations, accruedInterest, accruedPenalty, creationDate, assignedCentreKey, tranches, approvedDate, taxRate, lastTaxRateReviewDate, interestFromArrearsAccrued, scheduleSettings, daysLate, paymentMethod, accountHolderKey, latePaymentsRecalculationMethod, fundingSources, accountHolderType, arrearsTolerancePeriod, lastInterestAppliedDate, rescheduledAccountKey, activationTransactionKey, assignedBranchKey, balances, creditArrangementKey, interestCommission, encodedKey, lastAccountAppraisalDate, penaltySettings, settlementAccountKey, lastModifiedDate, principalPaymentSettings, lastLockedDate, loanAmount, closedDate, productTypeKey, allowOffset, guarantors, accountArrearsSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanAccount {\n");
    sb.append("    accountState: ").append(toIndentedString(accountState)).append("\n");
    sb.append("    prepaymentSettings: ").append(toIndentedString(prepaymentSettings)).append("\n");
    sb.append("    migrationEventKey: ").append(toIndentedString(migrationEventKey)).append("\n");
    sb.append("    lastSetToArrearsDate: ").append(toIndentedString(lastSetToArrearsDate)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    disbursementDetails: ").append(toIndentedString(disbursementDetails)).append("\n");
    sb.append("    daysInArrears: ").append(toIndentedString(daysInArrears)).append("\n");
    sb.append("    accountSubState: ").append(toIndentedString(accountSubState)).append("\n");
    sb.append("    loanName: ").append(toIndentedString(loanName)).append("\n");
    sb.append("    interestSettings: ").append(toIndentedString(interestSettings)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    lastInterestReviewDate: ").append(toIndentedString(lastInterestReviewDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    assignedUserKey: ").append(toIndentedString(assignedUserKey)).append("\n");
    sb.append("    futurePaymentsAcceptance: ").append(toIndentedString(futurePaymentsAcceptance)).append("\n");
    sb.append("    originalAccountKey: ").append(toIndentedString(originalAccountKey)).append("\n");
    sb.append("    lockedOperations: ").append(toIndentedString(lockedOperations)).append("\n");
    sb.append("    accruedInterest: ").append(toIndentedString(accruedInterest)).append("\n");
    sb.append("    accruedPenalty: ").append(toIndentedString(accruedPenalty)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    assignedCentreKey: ").append(toIndentedString(assignedCentreKey)).append("\n");
    sb.append("    tranches: ").append(toIndentedString(tranches)).append("\n");
    sb.append("    approvedDate: ").append(toIndentedString(approvedDate)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    lastTaxRateReviewDate: ").append(toIndentedString(lastTaxRateReviewDate)).append("\n");
    sb.append("    interestFromArrearsAccrued: ").append(toIndentedString(interestFromArrearsAccrued)).append("\n");
    sb.append("    scheduleSettings: ").append(toIndentedString(scheduleSettings)).append("\n");
    sb.append("    daysLate: ").append(toIndentedString(daysLate)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    accountHolderKey: ").append(toIndentedString(accountHolderKey)).append("\n");
    sb.append("    latePaymentsRecalculationMethod: ").append(toIndentedString(latePaymentsRecalculationMethod)).append("\n");
    sb.append("    fundingSources: ").append(toIndentedString(fundingSources)).append("\n");
    sb.append("    accountHolderType: ").append(toIndentedString(accountHolderType)).append("\n");
    sb.append("    arrearsTolerancePeriod: ").append(toIndentedString(arrearsTolerancePeriod)).append("\n");
    sb.append("    lastInterestAppliedDate: ").append(toIndentedString(lastInterestAppliedDate)).append("\n");
    sb.append("    rescheduledAccountKey: ").append(toIndentedString(rescheduledAccountKey)).append("\n");
    sb.append("    activationTransactionKey: ").append(toIndentedString(activationTransactionKey)).append("\n");
    sb.append("    assignedBranchKey: ").append(toIndentedString(assignedBranchKey)).append("\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    creditArrangementKey: ").append(toIndentedString(creditArrangementKey)).append("\n");
    sb.append("    interestCommission: ").append(toIndentedString(interestCommission)).append("\n");
    sb.append("    encodedKey: ").append(toIndentedString(encodedKey)).append("\n");
    sb.append("    lastAccountAppraisalDate: ").append(toIndentedString(lastAccountAppraisalDate)).append("\n");
    sb.append("    penaltySettings: ").append(toIndentedString(penaltySettings)).append("\n");
    sb.append("    settlementAccountKey: ").append(toIndentedString(settlementAccountKey)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    principalPaymentSettings: ").append(toIndentedString(principalPaymentSettings)).append("\n");
    sb.append("    lastLockedDate: ").append(toIndentedString(lastLockedDate)).append("\n");
    sb.append("    loanAmount: ").append(toIndentedString(loanAmount)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    productTypeKey: ").append(toIndentedString(productTypeKey)).append("\n");
    sb.append("    allowOffset: ").append(toIndentedString(allowOffset)).append("\n");
    sb.append("    guarantors: ").append(toIndentedString(guarantors)).append("\n");
    sb.append("    accountArrearsSettings: ").append(toIndentedString(accountArrearsSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

