/*
 * deposits/transactions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.transactions.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The amounts affected after completing the deposit transaction
 */
@ApiModel(description = "The amounts affected after completing the deposit transaction")
@JsonPropertyOrder({
  DepositAffectedAmounts.JSON_PROPERTY_FEES_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_OVERDRAFT_INTEREST_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_OVERDRAFT_FEES_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_FRACTION_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_OVERDRAFT_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_INTEREST_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_AMOUNT,
  DepositAffectedAmounts.JSON_PROPERTY_FUNDS_AMOUNT
})

public class DepositAffectedAmounts {
  public static final String JSON_PROPERTY_FEES_AMOUNT = "feesAmount";
  private BigDecimal feesAmount;

  public static final String JSON_PROPERTY_OVERDRAFT_INTEREST_AMOUNT = "overdraftInterestAmount";
  private BigDecimal overdraftInterestAmount;

  public static final String JSON_PROPERTY_OVERDRAFT_FEES_AMOUNT = "overdraftFeesAmount";
  private BigDecimal overdraftFeesAmount;

  public static final String JSON_PROPERTY_FRACTION_AMOUNT = "fractionAmount";
  private BigDecimal fractionAmount;

  public static final String JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT = "technicalOverdraftAmount";
  private BigDecimal technicalOverdraftAmount;

  public static final String JSON_PROPERTY_OVERDRAFT_AMOUNT = "overdraftAmount";
  private BigDecimal overdraftAmount;

  public static final String JSON_PROPERTY_INTEREST_AMOUNT = "interestAmount";
  private BigDecimal interestAmount;

  public static final String JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_AMOUNT = "technicalOverdraftInterestAmount";
  private BigDecimal technicalOverdraftInterestAmount;

  public static final String JSON_PROPERTY_FUNDS_AMOUNT = "fundsAmount";
  private BigDecimal fundsAmount;


  public DepositAffectedAmounts feesAmount(BigDecimal feesAmount) {
    
    this.feesAmount = feesAmount;
    return this;
  }

   /**
   * Amount of fees involved in a transaction that affects an account with positive balance
   * @return feesAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of fees involved in a transaction that affects an account with positive balance")
  @JsonProperty(JSON_PROPERTY_FEES_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFeesAmount() {
    return feesAmount;
  }


  public void setFeesAmount(BigDecimal feesAmount) {
    this.feesAmount = feesAmount;
  }


  public DepositAffectedAmounts overdraftInterestAmount(BigDecimal overdraftInterestAmount) {
    
    this.overdraftInterestAmount = overdraftInterestAmount;
    return this;
  }

   /**
   * Interest amount involved in a transaction that affects an overdraft
   * @return overdraftInterestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interest amount involved in a transaction that affects an overdraft")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftInterestAmount() {
    return overdraftInterestAmount;
  }


  public void setOverdraftInterestAmount(BigDecimal overdraftInterestAmount) {
    this.overdraftInterestAmount = overdraftInterestAmount;
  }


  public DepositAffectedAmounts overdraftFeesAmount(BigDecimal overdraftFeesAmount) {
    
    this.overdraftFeesAmount = overdraftFeesAmount;
    return this;
  }

   /**
   * Fees amount involved in a transaction that affects an overdraft
   * @return overdraftFeesAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fees amount involved in a transaction that affects an overdraft")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_FEES_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftFeesAmount() {
    return overdraftFeesAmount;
  }


  public void setOverdraftFeesAmount(BigDecimal overdraftFeesAmount) {
    this.overdraftFeesAmount = overdraftFeesAmount;
  }


  public DepositAffectedAmounts fractionAmount(BigDecimal fractionAmount) {
    
    this.fractionAmount = fractionAmount;
    return this;
  }

   /**
   * In the case of an LOAN_FRACTION_BOUGHT this represent the fraction amount which was bought from another investor
   * @return fractionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In the case of an LOAN_FRACTION_BOUGHT this represent the fraction amount which was bought from another investor")
  @JsonProperty(JSON_PROPERTY_FRACTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFractionAmount() {
    return fractionAmount;
  }


  public void setFractionAmount(BigDecimal fractionAmount) {
    this.fractionAmount = fractionAmount;
  }


  public DepositAffectedAmounts technicalOverdraftAmount(BigDecimal technicalOverdraftAmount) {
    
    this.technicalOverdraftAmount = technicalOverdraftAmount;
    return this;
  }

   /**
   * The amount of money that was added/subtracted from the account by this transaction as technical overdraft
   * @return technicalOverdraftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of money that was added/subtracted from the account by this transaction as technical overdraft")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_OVERDRAFT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTechnicalOverdraftAmount() {
    return technicalOverdraftAmount;
  }


  public void setTechnicalOverdraftAmount(BigDecimal technicalOverdraftAmount) {
    this.technicalOverdraftAmount = technicalOverdraftAmount;
  }


  public DepositAffectedAmounts overdraftAmount(BigDecimal overdraftAmount) {
    
    this.overdraftAmount = overdraftAmount;
    return this;
  }

   /**
   * The amount of money that was added/subtracted from the account by this transaction as overdraft
   * @return overdraftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of money that was added/subtracted from the account by this transaction as overdraft")
  @JsonProperty(JSON_PROPERTY_OVERDRAFT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getOverdraftAmount() {
    return overdraftAmount;
  }


  public void setOverdraftAmount(BigDecimal overdraftAmount) {
    this.overdraftAmount = overdraftAmount;
  }


  public DepositAffectedAmounts interestAmount(BigDecimal interestAmount) {
    
    this.interestAmount = interestAmount;
    return this;
  }

   /**
   * Amount of interest involved in a transaction that affects an account with positive balance
   * @return interestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Amount of interest involved in a transaction that affects an account with positive balance")
  @JsonProperty(JSON_PROPERTY_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getInterestAmount() {
    return interestAmount;
  }


  public void setInterestAmount(BigDecimal interestAmount) {
    this.interestAmount = interestAmount;
  }


  public DepositAffectedAmounts technicalOverdraftInterestAmount(BigDecimal technicalOverdraftInterestAmount) {
    
    this.technicalOverdraftInterestAmount = technicalOverdraftInterestAmount;
    return this;
  }

   /**
   * The amount of money that was added/subtracted from the account by this transaction as technical overdraft interest
   * @return technicalOverdraftInterestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of money that was added/subtracted from the account by this transaction as technical overdraft interest")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_OVERDRAFT_INTEREST_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTechnicalOverdraftInterestAmount() {
    return technicalOverdraftInterestAmount;
  }


  public void setTechnicalOverdraftInterestAmount(BigDecimal technicalOverdraftInterestAmount) {
    this.technicalOverdraftInterestAmount = technicalOverdraftInterestAmount;
  }


  public DepositAffectedAmounts fundsAmount(BigDecimal fundsAmount) {
    
    this.fundsAmount = fundsAmount;
    return this;
  }

   /**
   * Balance change amount involved in a transaction that affects an account with positive balance
   * @return fundsAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Balance change amount involved in a transaction that affects an account with positive balance")
  @JsonProperty(JSON_PROPERTY_FUNDS_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFundsAmount() {
    return fundsAmount;
  }


  public void setFundsAmount(BigDecimal fundsAmount) {
    this.fundsAmount = fundsAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositAffectedAmounts depositAffectedAmounts = (DepositAffectedAmounts) o;
    return Objects.equals(this.feesAmount, depositAffectedAmounts.feesAmount) &&
        Objects.equals(this.overdraftInterestAmount, depositAffectedAmounts.overdraftInterestAmount) &&
        Objects.equals(this.overdraftFeesAmount, depositAffectedAmounts.overdraftFeesAmount) &&
        Objects.equals(this.fractionAmount, depositAffectedAmounts.fractionAmount) &&
        Objects.equals(this.technicalOverdraftAmount, depositAffectedAmounts.technicalOverdraftAmount) &&
        Objects.equals(this.overdraftAmount, depositAffectedAmounts.overdraftAmount) &&
        Objects.equals(this.interestAmount, depositAffectedAmounts.interestAmount) &&
        Objects.equals(this.technicalOverdraftInterestAmount, depositAffectedAmounts.technicalOverdraftInterestAmount) &&
        Objects.equals(this.fundsAmount, depositAffectedAmounts.fundsAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(feesAmount, overdraftInterestAmount, overdraftFeesAmount, fractionAmount, technicalOverdraftAmount, overdraftAmount, interestAmount, technicalOverdraftInterestAmount, fundsAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositAffectedAmounts {\n");
    sb.append("    feesAmount: ").append(toIndentedString(feesAmount)).append("\n");
    sb.append("    overdraftInterestAmount: ").append(toIndentedString(overdraftInterestAmount)).append("\n");
    sb.append("    overdraftFeesAmount: ").append(toIndentedString(overdraftFeesAmount)).append("\n");
    sb.append("    fractionAmount: ").append(toIndentedString(fractionAmount)).append("\n");
    sb.append("    technicalOverdraftAmount: ").append(toIndentedString(technicalOverdraftAmount)).append("\n");
    sb.append("    overdraftAmount: ").append(toIndentedString(overdraftAmount)).append("\n");
    sb.append("    interestAmount: ").append(toIndentedString(interestAmount)).append("\n");
    sb.append("    technicalOverdraftInterestAmount: ").append(toIndentedString(technicalOverdraftInterestAmount)).append("\n");
    sb.append("    fundsAmount: ").append(toIndentedString(fundsAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

