/*
 * deposits/transactions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.backbase.mambu.deposit.transactions.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The unit that composes the list used for Deposit transactions client directed searching
 */
@ApiModel(description = "The unit that composes the list used for Deposit transactions client directed searching")
@JsonPropertyOrder({
  DepositTransactionFilterCriteria.JSON_PROPERTY_FIELD,
  DepositTransactionFilterCriteria.JSON_PROPERTY_VALUE,
  DepositTransactionFilterCriteria.JSON_PROPERTY_OPERATOR,
  DepositTransactionFilterCriteria.JSON_PROPERTY_SECOND_VALUE,
  DepositTransactionFilterCriteria.JSON_PROPERTY_VALUES
})

public class DepositTransactionFilterCriteria {
  /**
   * Contains the actual searching fields that can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId]. |Field with limited capabilities          |Data Type |Operators   | |-----------------------------------------|----------|------------| |originalTransactionKey                   |KEY       |EQUALS, IN  | |transactionDetails.transactionChannelId  |STRING    |EQUALS      | |originalTransactionID                    |STRING    |EQUALS      | 
   */
  public enum FieldEnum {
    ENCODEDKEY("encodedKey"),
    
    ID("id"),
    
    EXTERNALID("externalId"),
    
    PRODUCTID("productID"),
    
    CURRENCYCODE("currencyCode"),
    
    BRANCHID("branchID"),
    
    BRANCHKEY("branchKey"),
    
    CENTREID("centreID"),
    
    CENTREKEY("centreKey"),
    
    TILLID("tillID"),
    
    TILLKEY("tillKey"),
    
    AMOUNT("amount"),
    
    AFFECTEDAMOUNTS_FUNDSAMOUNT("affectedAmounts.fundsAmount"),
    
    AFFECTEDAMOUNTS_INTERESTAMOUNT("affectedAmounts.interestAmount"),
    
    AFFECTEDAMOUNTS_FEESAMOUNT("affectedAmounts.feesAmount"),
    
    PARENTACCOUNTKEY("parentAccountKey"),
    
    PARENTACCOUNTID("parentAccountID"),
    
    PRODUCTTYPEKEY("productTypeKey"),
    
    USERKEY("userKey"),
    
    ADJUSTMENTTRANSACTIONID("adjustmentTransactionID"),
    
    ADJUSTMENTTRANSACTIONKEY("adjustmentTransactionKey"),
    
    ORIGINALTRANSACTIONKEY("originalTransactionKey"),
    
    ORIGINALTRANSACTIONID("originalTransactionID"),
    
    TRANSACTIONDETAILS_TRANSACTIONCHANNELKEY("transactionDetails.transactionChannelKey"),
    
    TRANSACTIONDETAILS_TRANSACTIONCHANNELID("transactionDetails.transactionChannelId"),
    
    TYPE("type"),
    
    CREATIONDATE("creationDate"),
    
    ACCOUNTBALANCES_TOTALBALANCE("accountBalances.totalBalance"),
    
    VALUEDATE("valueDate"),
    
    TAXES_TAXRATE("taxes.taxRate"),
    
    TERMS_INTERESTSETTINGS_INTERESTRATE("terms.interestSettings.interestRate"),
    
    FEES_TRIGGER("fees.trigger"),
    
    FEES_NAME("fees.name"),
    
    FEES_PREDEFINEDFEEKEY("fees.predefinedFeeKey"),
    
    WASADJUSTED("wasAdjusted"),
    
    TYPEISADJUSTMENT("typeIsAdjustment"),
    
    AFFECTEDAMOUNTS_OVERDRAFTAMOUNT("affectedAmounts.overdraftAmount"),
    
    AFFECTEDAMOUNTS_OVERDRAFTINTERESTAMOUNT("affectedAmounts.overdraftInterestAmount"),
    
    AFFECTEDAMOUNTS_OVERDRAFTFEESAMOUNT("affectedAmounts.overdraftFeesAmount"),
    
    AFFECTEDAMOUNTS_TECHNICALOVERDRAFTAMOUNT("affectedAmounts.technicalOverdraftAmount"),
    
    AFFECTEDAMOUNTS_TECHNICALOVERDRAFTINTERESTAMOUNT("affectedAmounts.technicalOverdraftInterestAmount"),
    
    TERMS_OVERDRAFTINTERESTSETTINGS_INTERESTRATE("terms.overdraftInterestSettings.interestRate"),
    
    TERMS_OVERDRAFTINTERESTSETTINGS_INDEXINTERESTRATE("terms.overdraftInterestSettings.indexInterestRate");

    private String value;

    FieldEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FieldEnum fromValue(String value) {
      for (FieldEnum b : FieldEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FIELD = "field";
  private FieldEnum field;

  public static final String JSON_PROPERTY_VALUE = "value";
  private String value;

  /**
   * | **Operator**  | **Affected values** | **Available for**                                                    | |---------------|----------------------|----------------------------------------------------------------------| | EQUALS        | ONE_VALUE            | BIG_DECIMAL,BOOLEAN,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY        | | MORE_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | LESS_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | BETWEEN       | TWO_VALUES           | BIG_DECIMAL,NUMBER,MONEY,DATE,DATE_TIME                              | | ON            | ONE_VALUE            | DATE,DATE_TIME                                                       | | AFTER         | ONE_VALUE            | DATE,DATE_TIME                                                       | | BEFORE        | ONE_VALUE            | DATE,DATE_TIME                                                       | | STARTS_WITH   | ONE_VALUE            | STRING                                                               | | IN            | LIST                 | ENUM,KEY                                                             | | TODAY         | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_WEEK     | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_MONTH    | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_YEAR     | NO_VALUE             | DATE,DATE_TIME                                                       | | LAST_DAYS     | ONE_VALUE            | NUMBER                                                               | | EMPTY         | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME | | NOT_EMPTY     | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME |
   */
  public enum OperatorEnum {
    EQUALS("EQUALS"),
    
    EQUALS_CASE_SENSITIVE("EQUALS_CASE_SENSITIVE"),
    
    DIFFERENT_THAN("DIFFERENT_THAN"),
    
    MORE_THAN("MORE_THAN"),
    
    LESS_THAN("LESS_THAN"),
    
    BETWEEN("BETWEEN"),
    
    ON("ON"),
    
    AFTER("AFTER"),
    
    BEFORE("BEFORE"),
    
    STARTS_WITH("STARTS_WITH"),
    
    STARTS_WITH_CASE_SENSITIVE("STARTS_WITH_CASE_SENSITIVE"),
    
    IN("IN"),
    
    TODAY("TODAY"),
    
    THIS_WEEK("THIS_WEEK"),
    
    THIS_MONTH("THIS_MONTH"),
    
    THIS_YEAR("THIS_YEAR"),
    
    LAST_DAYS("LAST_DAYS"),
    
    EMPTY("EMPTY"),
    
    NOT_EMPTY("NOT_EMPTY");

    private String value;

    OperatorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OperatorEnum fromValue(String value) {
      for (OperatorEnum b : OperatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private OperatorEnum operator;

  public static final String JSON_PROPERTY_SECOND_VALUE = "secondValue";
  private String secondValue;

  public static final String JSON_PROPERTY_VALUES = "values";
  private List<String> values = null;


  public DepositTransactionFilterCriteria field(FieldEnum field) {
    
    this.field = field;
    return this;
  }

   /**
   * Contains the actual searching fields that can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId]. |Field with limited capabilities          |Data Type |Operators   | |-----------------------------------------|----------|------------| |originalTransactionKey                   |KEY       |EQUALS, IN  | |transactionDetails.transactionChannelId  |STRING    |EQUALS      | |originalTransactionID                    |STRING    |EQUALS      | 
   * @return field
  **/
  @ApiModelProperty(required = true, value = "Contains the actual searching fields that can be native (one from the provided list) or otherwise can specify a custom field using the format [customFieldSetId].[customFieldId]. |Field with limited capabilities          |Data Type |Operators   | |-----------------------------------------|----------|------------| |originalTransactionKey                   |KEY       |EQUALS, IN  | |transactionDetails.transactionChannelId  |STRING    |EQUALS      | |originalTransactionID                    |STRING    |EQUALS      | ")
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldEnum getField() {
    return field;
  }


  public void setField(FieldEnum field) {
    this.field = field;
  }


  public DepositTransactionFilterCriteria value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The value to match the searching criteria
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The value to match the searching criteria")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public DepositTransactionFilterCriteria operator(OperatorEnum operator) {
    
    this.operator = operator;
    return this;
  }

   /**
   * | **Operator**  | **Affected values** | **Available for**                                                    | |---------------|----------------------|----------------------------------------------------------------------| | EQUALS        | ONE_VALUE            | BIG_DECIMAL,BOOLEAN,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY        | | MORE_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | LESS_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | BETWEEN       | TWO_VALUES           | BIG_DECIMAL,NUMBER,MONEY,DATE,DATE_TIME                              | | ON            | ONE_VALUE            | DATE,DATE_TIME                                                       | | AFTER         | ONE_VALUE            | DATE,DATE_TIME                                                       | | BEFORE        | ONE_VALUE            | DATE,DATE_TIME                                                       | | STARTS_WITH   | ONE_VALUE            | STRING                                                               | | IN            | LIST                 | ENUM,KEY                                                             | | TODAY         | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_WEEK     | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_MONTH    | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_YEAR     | NO_VALUE             | DATE,DATE_TIME                                                       | | LAST_DAYS     | ONE_VALUE            | NUMBER                                                               | | EMPTY         | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME | | NOT_EMPTY     | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME |
   * @return operator
  **/
  @ApiModelProperty(required = true, value = "| **Operator**  | **Affected values** | **Available for**                                                    | |---------------|----------------------|----------------------------------------------------------------------| | EQUALS        | ONE_VALUE            | BIG_DECIMAL,BOOLEAN,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY        | | MORE_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | LESS_THAN     | ONE_VALUE            | BIG_DECIMAL,NUMBER,MONEY                                             | | BETWEEN       | TWO_VALUES           | BIG_DECIMAL,NUMBER,MONEY,DATE,DATE_TIME                              | | ON            | ONE_VALUE            | DATE,DATE_TIME                                                       | | AFTER         | ONE_VALUE            | DATE,DATE_TIME                                                       | | BEFORE        | ONE_VALUE            | DATE,DATE_TIME                                                       | | STARTS_WITH   | ONE_VALUE            | STRING                                                               | | IN            | LIST                 | ENUM,KEY                                                             | | TODAY         | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_WEEK     | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_MONTH    | NO_VALUE             | DATE,DATE_TIME                                                       | | THIS_YEAR     | NO_VALUE             | DATE,DATE_TIME                                                       | | LAST_DAYS     | ONE_VALUE            | NUMBER                                                               | | EMPTY         | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME | | NOT_EMPTY     | NO_VALUE             | BIG_DECIMAL,LONG,MONEY,NUMBER,PERCENT,STRING,ENUM,KEY,DATE,DATE_TIME |")
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OperatorEnum getOperator() {
    return operator;
  }


  public void setOperator(OperatorEnum operator) {
    this.operator = operator;
  }


  public DepositTransactionFilterCriteria secondValue(String secondValue) {
    
    this.secondValue = secondValue;
    return this;
  }

   /**
   * The second value to match the searching criteria, when using BETWEEN, together with value
   * @return secondValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The second value to match the searching criteria, when using BETWEEN, together with value")
  @JsonProperty(JSON_PROPERTY_SECOND_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondValue() {
    return secondValue;
  }


  public void setSecondValue(String secondValue) {
    this.secondValue = secondValue;
  }


  public DepositTransactionFilterCriteria values(List<String> values) {
    
    this.values = values;
    return this;
  }

  public DepositTransactionFilterCriteria addValuesItem(String valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * List of values when operator is IN.
   * @return values
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of values when operator is IN.")
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getValues() {
    return values;
  }


  public void setValues(List<String> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositTransactionFilterCriteria depositTransactionFilterCriteria = (DepositTransactionFilterCriteria) o;
    return Objects.equals(this.field, depositTransactionFilterCriteria.field) &&
        Objects.equals(this.value, depositTransactionFilterCriteria.value) &&
        Objects.equals(this.operator, depositTransactionFilterCriteria.operator) &&
        Objects.equals(this.secondValue, depositTransactionFilterCriteria.secondValue) &&
        Objects.equals(this.values, depositTransactionFilterCriteria.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, value, operator, secondValue, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositTransactionFilterCriteria {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    secondValue: ").append(toIndentedString(secondValue)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

